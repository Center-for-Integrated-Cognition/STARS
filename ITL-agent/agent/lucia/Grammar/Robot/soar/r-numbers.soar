#   Soar code produced automatically 
#   from file 'C:\Users\plind\OneDrive\GitHub\PLCode\Lucia\Grammars\Robot\ecg\r-numbers.ecg'.

#   TWENTY-FIVE construction
sp {comprehend-word*apply*lexical-access*TWENTY-FIVE-twenty-five
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |twenty-five|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name TWENTY-FIVE
          ^is <a>
          ^orth |twenty-five|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of CardinalNumber
          ^first-lex nil)
   (<a> ^a TWENTY-FIVE)
}

#   TWENTY-FIVE self.features.number <-- "pl" constraint
sp {comprehend-word*TWENTY-FIVE-constraint*self-features-number*ASSIGN*pl
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a TWENTY-FIVE
          ^orth |twenty-five|
          ^features <l-slot1>)
   (<l-slot1> ^number { <target> <> |pl| })
-->
   (<l-slot1> ^number <target> -
              ^number |pl|)
}

#   TWENTY-FIVE self.m.concept-type <-- "number" constraint
sp {comprehend-word*TWENTY-FIVE-constraint*self-m-concept-type*ASSIGN*number
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a TWENTY-FIVE
          ^orth |twenty-five|
          ^m <l-slot1>)
   (<l-slot1> ^concept-type { <target> <> |number| })
-->
   (<l-slot1> ^concept-type <target> -
              ^concept-type |number|)
}

#   TWENTY-FIVE self.m.concept-handle <-- "****v****X****v****X****v" constraint
sp {comprehend-word*TWENTY-FIVE-constraint*self-m-concept-handle*ASSIGN*****v****x****v****x****v
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a TWENTY-FIVE
          ^orth |twenty-five|
          ^m <l-slot1>)
   (<l-slot1> ^concept-handle { <target> <> |****v****X****v****X****v| })
-->
   (<l-slot1> ^concept-handle <target> -
              ^concept-handle |****v****X****v****X****v|)
}

#   TWENTY-FIVE self.m.class <-- "number" constraint
sp {comprehend-word*TWENTY-FIVE-constraint*self-m-class*ASSIGN*number
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a TWENTY-FIVE
          ^orth |twenty-five|
          ^m <l-slot1>)
   (<l-slot1> ^class { <target> <> |number| })
-->
   (<l-slot1> ^class <target> -
              ^class |number|)
}

#   TWENTY-FIVE self.m.name <-- "twenty-five" constraint
sp {comprehend-word*TWENTY-FIVE-constraint*self-m-name*ASSIGN*twenty-five
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a TWENTY-FIVE
          ^orth |twenty-five|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |twenty-five| })
-->
   (<l-slot1> ^name <target> -
              ^name |twenty-five|)
}


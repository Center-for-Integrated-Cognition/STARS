sp {has-attribute*elaborate*results*instance*positive
   (state <s> ^name has-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p> ^negative false ^type <name>)
   (<args> ^1 <a1>)
   (<a1> -^rtype set ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
   (<obja> ^predicates <pred>)
   (<pred> ^<name>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}

sp {has-attribute*elaborate*results*instance*negative
   (state <s> ^name has-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p> ^negative true ^type <name>)
   (<args> ^1 <a1>)
   (<a1> -^rtype set ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
   (<obja> ^predicates <pred>)
   (<pred> -^<name>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object  
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}

sp {has-attribute*propose*complete
   (state <s> ^name has-attribute
              ^instance <e>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <e>)
}

sp {has-attribute*apply*complete*instance
   (state <s> ^name has-attribute
              ^operator <op>
              #^instance <o> #JAMES UNCHUNKED VERSION
              ^superstate.condition.result.set <res>)
   (<op> ^name complete ^instance <o>) #JAMES UNCHUNKED VERSION
-->
   (<res> ^instance <o>)
}

##!
# @file
#
# @created p 20180618
# File: define-verb.soar
# Author: Peter 
# Created: 18 June 2018
#
# Desc: Define a verb
#
#


#################  VerbDefinition   ####################### 

#   Propose an operator to define a verb
sp {act*propose*verb-definition
   (state <s> ^problem-space act
              ^action <a>
             -^result )
   (<a> ^action DEFINE-VERB
        ^text <text>)
-->
   (<s> ^operator <o> +)
   (<o> ^name verb-definition
        ^text <text>
        ^debug-info (concat |We will create a new verb '| <text> |.'|))
}

#   Build a message to define a verb
sp {act*apply*verb-definition*create-message*intransitive-with-location
   (state <s> ^problem-space act
              ^operator <o>
              ^action <a>)
   (<o> ^name verb-definition
        ^text <text>)
   (<a> ^location { <location> <> nil }
       -^object 
        ^next <next>)
   (<location> ^prep <prep>
               ^object.referent <p-object>)
-->
   #    Create a message
   (<s> ^result <message>)
   (<message> ^message-type command
              ^message-type new-verb
              ^arg2 <new-location>
              ^action <new-verb>)
   (<new-verb> ^item-type action
               ^handle (make-constant-symbol <text>)
               ^word-structure <word-structure>)
   (<word-structure> ^new-action true
                     ^referent <new-verb>
                     ^spelling <text>)
   (<new-location> ^handle <prep>
                   ^item-type predicate
                   ^2 <p-object>)
   #    On to the next action
   (<s> ^action <a> -
        ^action <next>)
}

#   Build a message to define a verb
sp {act*apply*verb-definition*create-message*transitive*no-location
   (state <s> ^problem-space act
              ^operator <o>
              ^action <a>)
   (<o> ^name verb-definition
        ^text <text>)
   (<a> ^object { <object> <> nil }
       -^location 
        ^next <next>)
-->
   #    Create a message
   (<s> ^result <message>)
   (<message> ^message-type command
              ^message-type new-verb
              ^arg1 <object>
              ^action <new-verb>)
   (<new-verb> ^item-type action
               ^handle (make-constant-symbol <text>)
               ^word-structure <word-structure>)
   (<word-structure> ^new-action true
                     ^referent <new-verb>
                     ^spelling <text>)
   #    On to the next action
   (<s> ^action <a> -
        ^action <next>)
}

#   Build a message to define a verb
sp {act*apply*verb-definition*create-message*transitive*with-location
   (state <s> ^problem-space act
              ^operator <o>
              ^action <a>)
   (<o> ^name verb-definition
        ^text <text>)
   (<a> ^object { <object> <> nil }
        ^location <location> 
        ^next <next>)
   (<location> ^prep <prep>
               ^object.referent <p-object>)
-->
   #    Create a message
   (<s> ^result <message>)
   (<message> ^message-type command
              ^message-type new-verb
              ^arg1 <object>
              ^arg2 <new-location>
              ^action <new-verb>)
   (<new-verb> ^item-type action
               ^handle (make-constant-symbol <text>)
               ^word-structure <word-structure>)
   (<word-structure> ^new-action true
                     ^referent <new-verb>
                     ^spelling <text>)
   (<new-location> ^handle <prep>
                   ^item-type predicate
                   ^2 <p-object>)
   #    On to the next action
   (<s> ^action <a> -
        ^action <next>)
}

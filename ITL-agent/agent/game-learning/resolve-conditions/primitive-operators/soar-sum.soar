sp {soar-sum*propose*complete
   (state <s> ^name soar-sum
              ^instance <instance>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <instance>)
}

sp {soar-sum*apply*complete
   (state <s> ^name soar-sum
              ^superstate.condition.result.set <res>
              ^operator <op>
              ^instance <s1>)  
   (<op> ^name complete ^instance <s1>)
-->
  (<res> ^instance <s1>)
}

#sp {soar-sum*apply
#    (state <s1> ^gtype <gtype> ^list <l1> ^<gtype> <a1>)
#    (<l1> ^game <g1>)
#    (<a1> ^condition <c1>)
#    (<c1> ^result.set.instance <p2>)
#    (<p2> ^soar_sum <thing>)
#-->
#   (<p2> ^1 (sum <thing>))
#}

sp {soar-sum*numeric-evaluate*value
   (state <s> ^name soar-sum
              ^linkstate <ls>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <set>)
 -{(state <ls>)
   (<set> -^<something>)}
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <set>)} #bias only create one per object
-->
   (<s> ^instance <p>)
   #(<p> ^soar_sum <set>)#<arg1> (sum <set>))
   (<p> ^1 (sum <set>))
}

sp {soar-sum*numeric-evaluate*value*instance
   (state <s> ^name soar-sum
              ^linkstate <ls>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-sum)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <obja>)
  -{(state <ls>)
    (<obja> -^<something>)}
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <obja>)} #bias only create one per object
-->
#   (<ss> ^result <res>)
   (<s> ^instance <instance>)
   #(<instance> ^2 <obja> ^soar_sum <obja>)
   (<instance> ^2 <obja> ^1 (sum <obja>))
}
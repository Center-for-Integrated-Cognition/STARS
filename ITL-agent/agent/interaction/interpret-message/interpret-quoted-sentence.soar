#################################################################
#
# interpret-quoted-sentence
#   Occurs when the instructor says a quoted sentence
#
###################################################################

#######
# OPERATOR PROPOSAL
#######
sp {interpret-message*propose*interpret-quoted-sentence
   (state <s> ^name interpret-message
              ^instructor-message <msg>)
   (<msg> ^message-type quoted-sentence
         -^interpreted true)
-->
   (<s> ^operator <o> +)
   (<o> ^name interpret-quoted-sentence
        ^message <msg>)
}

######
# OPERATOR ELABORATIONS
######

# sentence: REQUIRED - the quoted sentence
sp {interpret-message*elaborate*interpret-quoted-sentence*object
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-quoted-sentence
        ^message.arg1.sentence <sent>)
-->
   (<o> ^sentence <sent>)
}

#####
# OPERATOR APPLICATION
#####

sp {interpret-message*apply*interpret-quoted-sentence*answer*add*to*ask*action
   (state <s> ^name interpret-message
              ^operator <o>
              ^instructor-message <msg>
              ^current-purpose <p>)
   (<p> ^type wait-for-answer
        ^parameters.current-task-segment <seg>)
   (<o> ^name interpret-quoted-sentence
        ^sentence <sentence>)
-->
   (<s> ^mark-interpreted <msg>)

   (<seg> ^answer <msg-obj>)
   (<msg-obj> ^predicates <preds>)
   (<preds> ^category message
            ^sentence <sentence>)
}

sp {interpret-message*apply*interpret-quoted-sentence*find-missing-object*mark*found-as
   (state <s> ^name interpret-message
              ^operator <o>
              ^instructor-message <msg>
              ^top-state.interaction.stack.segment.purpose <p>)
   (<o> ^name interpret-quoted-sentence
        ^object <obj>)
   (<p> ^type find-missing-object
        ^missing-object <missing>)
-->
   (<s> ^mark-interpreted <msg>)
   (<missing> ^found-as <obj>)
}
 

# Entered substate via a state no-change
sp {task-utils*copy-task-goal*state*no-change*elaborate*copy-task-goal-workspace
   (state <s> ^superstate.copy-task-goal <goal>
              ^impasse no-change
              ^attribute state)
-->
   (<s> ^copy-task-goal-workspace <ws>)
   (<ws> ^source-goal <goal>)
}

# NOTE: Don't test on this wme with any rules that will be chunked
# (If there are multiple workspaces, there will be problems)
# Instead, test copy-task-goal-workspace directly
sp {task-utils*copy-task-goal*elaborate*name*learn-copy-task-goal-elaboration-rule
   (state <s> ^copy-task-goal-workspace <ws>)
-->
   (<s> ^name learn-copy-task-goal-elaboration-rule)
}

sp {task-utils*copy-task-goal*elaborate*learning-task-utils-rule
   (state <s> ^name learn-copy-task-goal-elaboration-rule
              ^copy-task-goal-workspace <ws>)
   (<ws> -^was-copied true)
-->
   (<s> ^learning-task-utils-rule true)
}

sp {task-utils*copy-task-goal*elaborate*copy-task-goal*was-copied*true
   (state <s> ^copy-task-goal-workspace <ws>
              ^superstate.desired.duplicate-of <goal>)
   (<ws> ^source-goal <goal>)
-->
   (<ws> ^was-copied true)
}

sp {task-utils*copy-task-goal*elaborate*object-map*superoperator
   (state <s> ^copy-task-goal-workspace <ws>
              ^superstate.deep-copy-world.copy-objects-map <map>)
-->
   (<ws> ^object-map <map>)
}

sp {soar-math*propose*complete
   (state <s> ^name soar-math
              ^instance <instance>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <instance>)
}
sp {soar-math*apply*complete
   (state <s> ^name soar-math
              ^superstate.condition.result.set <res>
              ^operator <op>
              ^instance <s1>)  
   (<op> ^name complete ^instance <s1>)
-->
  (<res> ^instance <s1>)
}

sp {soar-math*multiply
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type multiply ^args <args> ^parameter.num < 2)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
   (<s> ^instance <instancen>)
   #(<res> ^instance <instancen>)
   #(<instancen> ^mult_1 <value> ^mult_2 <value1>)
   (<instancen> ^1 (* <value1> <value>))
}

sp {soar-math*add
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type add ^args <args> ^parameter.num < 2)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
    (<s> ^instance <instancen>)
   #(<res> ^instance <instancen>)
   (<instancen> ^1 (+ <value> <value1>))#^add_1 <value> ^add_2 <value1>)
}

sp {soar-math*divide
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type divide ^args <args> ^parameter.num < 2)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
    (<s> ^instance <instancen>)
   #(<res> ^instance <instancen>)
   #(<instancen> ^div_1 <value> ^div_2 <value1>)
   (<instancen> ^1 (/ <value> <value1>))
}

sp {soar-math*subtract
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type subtract ^args <args> ^parameter.num < 2)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
   (<s> ^instance <instancen>)
  #(<res> ^instance <instancen>)
   #(<instancen> ^sub_1 <value> ^sub_2 <value1>)
   (<instancen> ^1 (- <value> <value1>))
}

sp {soar-math*absolute-value
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type absolute-value ^args <args> ^parameter.num < 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
  -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
-->
   (<s> ^instance <instancen>)
   #(<res> ^instance <instancen>)
   #(<instancen> ^abs <value>)
   (<instancen> ^1 (abs <value>))
}

sp {soar-math*square-root
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type square-root ^args <args> ^parameter.num < 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
-->
   (<s> ^instance <instancen>)
   #(<res> ^instance <instancen>)
   #(<instancen> ^abs <value>)
   (<instancen> ^1 (sqrt <value>))
}

sp {soar-math*multiply*instance
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type multiply ^args <args> ^parameter.num > 1)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
   (<s> ^instance <pa>)
   (<pa> ^2 <value> ^3 <value1> ^1 (* <value1> <value>))
   #(<pa> ^2 <value> ^3 <value1> ^mult_1 <value> ^mult_2 <value1>)
}

sp {soar-math*add*instance
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type add ^args <args> ^parameter.num > 1)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
   (<s> ^instance <pa>)
  # (<res> ^instance <pa>)
   (<pa> ^2 <value> ^3 <value1> ^1 (+ <value1> <value>))
   #(<pa> ^2 <value> ^3 <value1> ^add_1 <value> ^add_2 <value1>)
}

sp {soar-math*divide*instance
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type divide ^args <args> ^parameter.num > 1)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
   (<s> ^instance <pa>)
   (<pa> ^2 <value> ^3 <value1> ^1 (/ <value> <value1>))
   #(<pa> ^2 <value> ^3 <value1> ^div_1 <value> ^div_2 <value1>)
}

sp {soar-math*subtract*instance
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type subtract ^args <args> ^parameter.num > 1)
   (<args> ^num 2
           ^2 <a1>
           ^3 <a2>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
   (<a2> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <value1>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <value1>)} #bias only create one per object
-->
   (<s> ^instance <pa>)
   (<pa> ^2 <value> ^3 <value1> ^1 (- <value> <value1>))
   #(<pa> ^2 <value> ^3 <value1> ^sub_1 <value> ^sub_2 <value1>)
}

sp {soar-math*abs*instance
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type absolute-value ^args <args> ^parameter.num 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
-->
   (<s> ^instance <pa>)
   #(<pa> ^2 <value> ^abs <value>)
   (<pa> ^2 <value> ^1 (abs <value>))
}

sp {soar-math*square-root*instance
   (state <s> ^name soar-math
              ^superstate.operator <o>)
   (<o> ^type square-root ^args <args> ^parameter.num 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <value>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <value>)} #bias only create one per object
-->
   (<s> ^instance <pa>)
   #(<pa> ^2 <value> ^abs <value>)
   (<pa> ^2 <value> ^1 (sqrt <value>))
}
#JK REMOVED BELOW 9/13/18
###################################################################
#
# interpret-where-is-question
#   Occurs when the intructor wishes to give additional information about an object
#   Construction: *-Where-is-DP-QT 
#   	E.g. 'Where is the red triangle'
#
###################################################################

#######
# OPERATOR PROPOSAL
#######
sp {interpret-message*propose*interpret-where-is-question
   (state <s> ^name interpret-message
              ^instructor-message <msg>)
   (<msg> ^message-type where-is-question
         -^interpreted true)
-->
   (<s> ^operator <o> +)
   (<o> ^name interpret-where-is-question
        ^message <msg>)
}

######
# OPERATOR ELABORATIONS
######

# Elaborate useful information from the message onto the operator
# object: REQUIRED - the object asked about
sp {interpret-message*elaborate*interpret-where-is-question*object
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-where-is-question
        ^message.arg1 <obj>)
        -{ (<msg> ^arg1 {> <obj> <obj2>})}
-->
   (<o> ^object <obj>)
}


#####
# OPERATOR APPLICATION
#####

#   Purpose is to answer questions regarding objects location
sp {interpret-message*apply*interpret-where-is-question*create*segment*location-question
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name interpret-where-is-question
        ^message <msg>
        ^object <obj>)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type location-question
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^dialog-event <de>)
   (<de> ^type explanation
         ^originator agent)
   (<params> ^object <obj>)

}

              
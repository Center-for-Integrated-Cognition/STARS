sp {transfer-predicate-structure*elaborate*predicate-handle
#:interrupt
   (state <s> ^name transfer-predicate-structure
              ^superstate.operator <o>)
   (<o> ^handle <handle>)
-->
   (<s> ^handle <handle>)
}

sp {transfer-predicate-structure*elaborate*condition
#:interrupt
   (state <s> ^name transfer-predicate-structure
              ^superstate.operator <o>)
   (<o> ^condition <co>)
-->
   (<s> ^condition <co>)
}

sp {transfer-predicate-structure*elaborate*predicate-lti
   (state <s> ^name transfer-predicate-structure
              ^superstate.operator <o>)
   (<o> ^predicate-lti <lti>)
-->
   (<s> ^predicate-lti <lti>)
}

sp {transfer-predicate-structure*elaborate*smem-query
   (state <s> ^name transfer-predicate-structure
              ^smem.command <c>
              ^handle <handle>)
-->
   (<c> ^query <cue>
        ^depth 25)
   (<cue> ^handle <handle> ^item-type predicate)
}

sp {transfer-predicate-structure*propose*convert-NLP-to-language
   (state <s> ^name transfer-predicate-structure
             -^nlp-relationships
              ^smem.result.retrieved.predicate-structure <ps>)
-->
    (<s> ^operator <o> + =)
    (<o> ^name convert-NLP-to-language
         ^structure <ps>)
}

sp {transfer-predicate-structure*propose*complete
   (state <s> ^name transfer-predicate-structure
              ^smem.result.retrieved <pred>)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete)
}

sp {BAD-TRANSFER*transfer-predicate-structure*elaborate*smem-query*unknown
   (state <s> ^name transfer-predicate-structure
              ^smem.result.failure
              ^superstate <ss>)
-->
    (halt)
   (<ss> ^unknown true)
}

sp {transfer-predicate-structure*apply*complete*smem-query*result
   (state <s> ^name transfer-predicate-structure
              ^operator.name complete
              ^superstate.superstate.game <game>
              ^top-state.dialog-context <dc>
              ^nlp-relationships <gr>
              ^nlp-functions <nf>
              ^smem.result.retrieved <pred> 
              ^top-state.interaction.status <status>
              ^top-state.interaction.changes <changes>)
   (<pred> ^predicate-structure <ps>  ^handle <name> )
-->
    (<dc> ^transfering <tf> ^learning-predicate <lp>)
    (<lp> ^name <name>)
    (<tf> ^name <name> ^lti <pred> ^to <game>)
    
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type transfer-concept
          ^complete-message true
          ^fields <f>)
   (<f> ^relationships <gr> ^concept-name <name> ^functions <nf>)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game
         ^originator agent)
}


#new
sp {ground-referent*propose*tested-referent
   (state <s> ^name ground-referent
              ^candidate-set.proto-referent <p>
             -^constraints.referent <r>)
   (<p> ^constraint-count 0
        ^object <r>)
-->
   (<s> ^operator <op> + =)
   (<op> ^name tested-referent
         ^proto-referent <p>)
}

#new
sp {apply*tested-referent
   (state <s> ^operator.name tested-referent
              ^superstate.operator <so>)
   (<so> ^parameter <p>
         ^<< double-constraints constraints >> <c>)
  -{(<s> ^candidate-set.proto-referent.object <obj>
         -^constraints.referent <obj>)}
-->
   (<c> ^ground-tested <p>)
}

sp {apply*tested-referent*monitor
#:interrupt
   (state <s> ^operator <o>)
   (<o> ^name tested-referent
        ^proto-referent.object <obj>)
   (<obj> ^handle <id>)
-->
   #(write (crlf) |Object | <obj> |, id:| <id> | passed all constraints.|)
}

sp {apply*tested-referent*copy-proto-referent*no-multiple
   (state <s> ^operator <o>
              ^constraints <cons>)
   (<o> ^name tested-referent
        ^proto-referent.object <obj>)
-->
   (<cons> ^referent <obj>)
}

####  This looks dangerous for chunking...
sp {apply*tested-referent*monitor*fail*remove-current-referent
   (state <s> ^operator.name tested-referent
              ^superstate.operator <so>
              ^constraints <cs>
             -^candidate-set.proto-referent.object <obj>)
   (<so> ^parameter <p>
         ^<< double-constraints constraints >> <cs>)
   (<cs> ^referent <obj>)
-->
   (<cs> ^referent <obj> -)
   #(write (crlf) |Remove prior referent | <obj> | from | <cs>)
}

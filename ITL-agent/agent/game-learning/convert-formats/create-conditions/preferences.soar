sp {prefer*of*create-condition*over*create-condition*parameter
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> ^parameter)
   (<o2> ^name create-condition ^condition <p3> -^parameter)
-{(<p2> ^relation.{2} <cx>)
  (<p3> ^arg1 <ar1> -^arg1 <p2>)
  (<ar1> ^relation <rx>)
  (<rx> ^handle in1 ^2 <cx>)}
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*of*create-condition*over*create-condition*arg1*in*parameter
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> ^parameter)
   (<o2> ^name create-condition ^condition <p3> -^parameter)
   (<p2> ^relation <rcx>)
   (<rcx> ^2 <cx>)
   (<p3> ^arg1 <ar1> -^arg1 <p2>)
   (<ar1> ^relation <rx>)
   (<rx> ^handle in1 ^2 <cx>)
-->
   (<s> ^operator <o2> > <o1>)
}

sp {prefer*of*create-condition*over*create-condition*parameter*arg1*arg2
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> -^parameter)
   (<o2> ^name create-condition ^condition <p3> -^parameter)
   (<p2> ^arg1 <ar1> ^predicate)
   (<ar1> ^parameter-index <z>)
   (<p3> ^arg1.parameter-index <x> ^predicate.{2} <ar1>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*of*create-condition*over*create-condition*parameter*arg1
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> -^parameter)
   (<o2> ^name create-condition ^condition <p3> -^parameter)
   (<p2> ^arg1 <ar1> ^predicate)
   (<ar1> ^parameter-index <z>)
   (<p3> -^arg1.parameter-index <x>)
-->
   (<s> ^operator <o1> > <o2>)
}

#new preferences
sp {prefer*of*create-condition*over*create-condition*number*of
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2>)
   (<o2> ^name create-condition ^condition <p3> -^parameter)
   (<p2> ^number <z>)
   (<p3> -^number -^arg1.parameter-index)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*of*create-condition*over*create-condition*equal-to*modifier
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2>)
   (<o2> ^name create-condition ^condition <p3>)
   (<p2> ^equal-to <p3> ^handle of1 ^modifier <m>)
   (<p3> ^equal-to <p2> ^handle of1 -^modifier)
-->
   (<s> ^operator <o1> > <o2>)
}


sp {prefer*of*create-condition*over*create-condition*equal-to*bias
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2>)
   (<o2> ^name create-condition ^condition {<p3> > <p2>})
   (<p2> ^equal-to <p3> ^handle of1 -^modifier)
   (<p3> ^equal-to <p2> ^handle of1 -^modifier)
-->
   (<s> ^operator <o1> > <o2>)
}
#
#
#
#sp {prefer*of*create-condition*over*debug
#   (state <s> ^name create-from-parse
#   		  	  ^operator <o1>)
#(<o1> ^name create-condition ^value accessible)
#-->
#(write (cmd print <o1> -d 6))
##(interrupt)
##(write (cmd pref <s>))
#}

sp {prefer*of*create-condition*over*create-condition*samearg*not*negative
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> -^parameter)
   (<o2> ^name create-condition ^condition <p3> -^parameter)
   (<p2> -^modifier.handle negation ^predicate.{2} <arg>)
   (<p3> ^modifier.handle negation ^predicate.{2} <arg>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*of*create-condition*over*create-condition*attribute
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> ^parameter ^attribute)
   (<o2> ^name create-condition ^condition <p3> ^parameter -^attribute)
 -{(<p3> ^relation <r>)
    (<r> ^handle in1 ^2 <p2>)
    (<s> -^superstate.world.predicates.predicate.handle in1)}
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*of*create-condition*over*create-condition*attribute*property
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <c> ^attribute -^attribute relation -^attribute property)
   (<o2> ^name create-condition ^condition <c2> ^attribute << relation property >>)
-{(<c> ^{<x2> <> equal-to} <c2>)}
-{(<c> ^{<x1> <> equal-to}.{<y1> <> equal-to} <c2>)}
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*of*create-condition*over*create-condition*same*attribute*alphanumeric*bias
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> ^attribute <att> ^value {<val1> < <val2>})
   (<o2> ^name create-condition ^condition <p3> ^attribute <att> ^value <val2>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*of*create-condition*over*create-condition*same*attribute*bias2
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <c2> ^attribute <att> ^value <val2>)
   (<o2> ^name create-condition ^condition {<c> > <c2>} ^attribute <att> ^value <val2>)
-{(<c2> ^{<x> <> equal-to} <c>)}
-{(<c2> ^{<x1> <> equal-to}.{<y1> <> equal-to} <c>)}
 #-{(<c2> ^relation <r>)
 #    (<r> ^handle in1 ^2 <c>)
 #    (<s> -^superstate.world.predicates.predicate.handle in1)}}
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-condition*over*create-condition*child*create-from-parse
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition
   		 ^condition <c>)
   (<o2> ^name create-condition
   		 ^condition <c2>)
   (<c2> ^{<x> <> equal-to} <c>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-condition*over*create-condition*child*create-from-parse*d2
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition
   		 ^condition <c>)
   (<o2> ^name create-condition
   		 ^condition <c2>)
   (<c2> ^{<x> <> equal-to}.{<y> <> equal-to} <c>)
   -{(<c2> ^relation <r>)
     (<r> ^handle in1 ^2 <c>)
     (<s> -^superstate.world.predicates.predicate.handle in1)}
-->
   (<s> ^operator <o1> > <o2>)
}


#HACK
sp {prefer*of*create-condition*over*create-condition*value*linear
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2> -^value linear)
   (<o2> ^name create-condition ^condition <p3> ^value linear)
-->
   (<s> ^operator <o1> > <o2>)
}

####################################
## create-from-parse preferences  ##
####################################
sp {prefer*create-object*over*input-object*create-from-parse
   (state <s> ^name create-from-parse
              ^<< output-object-1 input-object-2 input-object-1 >> <p>
              ^operator <o1> +)
   (<o1> ^name create-object
         ^parameter <p>)
-->
   (<s> ^operator <o1> >)
}
sp {prefer*create-object*over*create-condition*create-from-parse
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-object)
   (<o2> ^name create-condition)
-->
   (<s> ^operator <o1> > <o2>)
}
#bias preference for order of mention hack, want real order
sp {prefer*create-object*lower*handle*create-from-parse
   (state <s> ^name create-from-parse
              -^input-object-1 <p>
              -^input-object-2 <p>
              -^output-object-1 <p>
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-object ^parameter.handle {<h1> < <h2>})
   (<o2> ^name create-object ^parameter <p>)
   (<p> ^handle <h2>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-object*over*create-object*input-object*create-from-parse
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^<< output-object-1 input-object-1 >> <p>
              ^input-object-2 <p2>
              ^operator <o2> +)
   (<o1> ^name create-object ^parameter <p>)
   (<o2> ^name create-object ^parameter <p2>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*of*create-condition*over*create-condition*equal-to*of1
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <p2>)
   (<o2> ^name create-condition ^condition <p3>)
   (<p2> ^equal-to <p3> ^handle of1)
   (<p3> ^equal-to <p2> -^handle of1)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-condition*over*create-condition*in1*create-from-parse
   (state <s> ^name create-from-parse
   		  	 -^superstate.world.predicates.predicate.handle in1
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <c1>)
   (<o2> ^name create-condition ^condition <c2>)
   (<c1> ^formatted ^relation.handle in1) 
   (<c2> -^relation.handle in1)
-->
   (<s> ^operator <o1> > <o2>)
}
#JK maybe bad preferences rule, fix issue with random colorken, fixed failures
sp {prefer*create-condition*over*create-condition*of*relation*create-from-parse
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <c1>)
   (<o2> ^name create-condition ^condition <c2> -^parameter)
   (<c1> ^relation <r> ^multiple true)
   (<r> ^handle of1 ^2 <r2>)
   (<r2> ^formatted)
   (<c2> -^relation.handle of1) #c2
-{(<c2> ^arg1 <r2>)}
-{(<c2> ^arg1.relation <rx>)
  (<rx> ^handle in1 ^2 <r2>)}
#-^arg1.parameter-index)
-->
#(interrupt)
   (<s> ^operator <o1> > <o2>)
}


#want? seems to mess up Xneworder.shuffle...
#sp {prefer*create-condition*over*create-condition*of1*create-from-parse
#   (state <s> ^name create-from-parse
#              ^operator <o1> +
#              ^operator <o2> +)
#   (<o1> ^name create-condition ^condition <c1>)
#   (<o2> ^name create-condition ^condition <c2>)
#   (<c1> -^handle of1) 
#   (<c2> ^handle of1)
#-->
#   (<s> ^operator <o1> > <o2>)
#}

####################################
## create-conditions preferences  ##
####################################
sp {prefer*smem-version-retrieve*over*create-name*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name << retrieve-all-versions smem-version-retrieve >>)
   (<o2> ^name create-name)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*smem-version-retrieve*over*create-action*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name << retrieve-all-versions smem-version-retrieve >>)
   (<o2> ^name create-action)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*smem-version-retrieve*create-condition*over*create-condition*action
   (state <s> ^name create-from-parse
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-condition ^condition <co>)
   (<o2> ^name create-condition ^condition.action.handle << move1 write1 remove1 >>)
   (<co> -^action.item-type action)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-action*over*rest*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-action)
   (<o2> -^name << retrieve-all-versions smem-version-retrieve >> -^name create-action)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-name*over*create-type*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-name)
   (<o2> ^name create-type)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-type*over*create-attribute*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-type)
   (<o2> ^name << create-negative create-attribute >>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-attribute*over*create-negative*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-attribute)
   (<o2> ^name create-negative)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-negative*over*create-args*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-negative)
   (<o2> ^name create-args)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-args*over*create-parameter*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-args)
   (<o2> ^name create-parameter)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-parameter*over*create-rtype*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-parameter)
   (<o2> ^name create-rtype)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-rtype*over*create-return-type*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-rtype)
   (<o2> ^name << create-result create-return-type >>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-return-type*over*create-result*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-return-type)
   (<o2> ^name create-result)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-return-type*over*complete*create-condition
   (state <s> ^name create-condition
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-result)
   (<o2> ^name complete)
-->
   (<s> ^operator <o1> > <o2>)
}
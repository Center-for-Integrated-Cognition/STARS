#rhs function rule workaround
#sp {soar-size*apply
#    (state <s1> ^gtype <gtype> ^list <l1> ^<gtype> <a1>)
#    (<l1> ^game <g1>)
#    (<a1> ^condition <c1>)
#    (<c1> ^result.set.instance <p2>)
#    (<p2> ^soar_size <thing>)
#-->
#   (<p2> ^1 (size <thing>))
#}

sp {soar-count*propose*complete
   (state <s> ^name soar-count
              ^instance <instance>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <instance>)
}

sp {soar-count*apply*complete
   (state <s> ^name soar-count
              ^superstate.condition.result.set <res>
              ^operator <op>
              ^instance <s1>)  
   (<op> ^name complete ^instance <s1>) #JAMES UNCHUNKED VERSION
-->
  (<res> ^instance <s1>)
}

sp {soar-count*elaborate*rhs*2params
   (state <s> ^name soar-count
              ^linkstate <ls>
             # ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-count)
   (<args> ^num 1 ^2 <a1>)
   (<a1> ^result <r> ^rtype set)
   (<r> ^set.instance.{1} <set>)
   -{(state <ls>)
     (<set> -^<something>)}
-->
#   (<s> ^count.set <set>)
   #(<res> ^instance <p>)
   (<s> ^instance <p>)
   (<p> ^2 <set> ^1 (size <set>))
  # (<p> ^2 <set> ^soar_size <set>)
}

sp {soar-count*elaborate*rhs*2params*single
   (state <s> ^name soar-count
              ^linkstate <ls>
              #^superstate.condition.result.set <res>
        #      ^result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-count)
   (<args> ^num 1 ^2 <a1>)
   (<a1> ^result <r> ^rtype single)
   (<r> ^set <set>)
   -{(state <ls>)
     (<set> -^<something>)}
-->
#   (<s> ^count.set <set>)
   #(<res> ^instance <p>)
   (<s> ^instance <p>)
   (<p> ^2 <set> ^1 (size <set>))
   #(<p> ^2 <set> ^soar_size <set>)
}

sp {soar-count*elaborate*rhs*1param
   (state <s> ^name soar-count
              #^type set
              ^linkstate <ls>
            #  ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^name soar-count)
   (<args> ^num 1 ^2 <a1>)
   (<a1> ^result <r> ^rtype set)
   (<r> ^set.instance.{1} <set>)
  -{(state <ls>)
    (<set> -^<something>)}
-->
 #  (<s> ^instance <instance>)
 #  (<instance> ^ (size <set>))
   #(<res> ^instance <p>)
   (<s> ^instance <p>)
   (<p> ^1 (size <set>))
   #(<res> ^instance.soar_size <set>)
}

sp {soar-count*elaborate*rhs*1param*signle
   (state <s> ^name soar-count
              ^linkstate <ls>
              #^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^name soar-count)
   (<args> ^num 1 ^2 <a1>)
   (<a1> ^result <r> ^rtype single)
   (<r> ^set <set>)
  -{(state <ls>)
    (<set> -^<something>)}
-->
   (<s> ^instance <instance>)
   (<instance> ^1 (size <set>))
   #(<res> ^instance.soar_size <set>)
}

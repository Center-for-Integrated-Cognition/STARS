# problem-space.world.copy-type << deep shallow >>
#		Whether the world copy is shallow (elaborates the same identifier)
#			or deep (all substructure is deep copied)
#
# For deep copy implementation, see deep-copy-world.soar

# Shallow copy, just elaborate the world directly
sp {problem-space*world*copy-type*shallow*elaborate*world
   (state <s> ^problem-space.world <w>)
   (<w> ^copy-type shallow
       -^copy-type deep
        ^source <world>)
-->
   (<s> ^world <world>)
}

# Deep copy, setup the deep-copy-world structure to facilitate
sp {problem-space*world*copy-type*deep*elaborate*deep-copy-world
   (state <s> ^problem-space.world <w>)
   (<w> ^copy-type deep
        ^source <world>)
-->
   (<s> ^deep-copy-world <dcw>)
   (<dcw> ^source <world>)
}

# Deep copy, elaborate the world from the deep-copy-world.copy
sp {problem-space*world*copy-type*deep*elaborate*world*from*deep-copy-world
   (state <s> ^problem-space.world <w>
              ^deep-copy-world <dcw>)
   (<w> ^copy-type deep
        ^source <src-world>)
   (<dcw> ^source <src-world>
          ^copy <world-copy>)
-->
   (<s> ^world <world-copy>)
}
              
#JK RHS deep copy version (copy really bad partial matches on big states)                    
#sp {problem-space*world*copy-type*deep*elaborate*deep-copy-world*rhs
#:o-support
#   (state <s> ^problem-space.world <w> -^deep-copy.delay-copy)# -^simulated true)
#   (<w> ^copy-type deep-rhs
#        ^source <world>)
#-->
#   (<s> ^deep-copy <dcw> ^world (deep-copy <world>))
#   (<dcw> ^source <world>)# ^copy-objects-map <com>)#^copy 
#}
#sp {problem-space*world*copy-type*deep*elaborate*deep-copy-world*elaborate*world*rhs223
#:o-support
#   (state <s> ^world <world>
#              #^quiescence t                   
#              ^deep-copy <dcw>)
#   (<dcw> ^source <world2> ^copy-objects-map <com>)
#   (<world2> ^objects.object <obj1>)
#   (<world> ^objects.object <obj2>)
#   (<obj1> ^handle <h1>)
#   (<obj2> ^handle <h1>)
#-->
#   (<com> ^entry <e>)
#   (<e> ^copy <obj2> ^source <obj1>)
#}

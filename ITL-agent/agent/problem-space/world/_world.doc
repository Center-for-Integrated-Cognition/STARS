# general rules that have to deal with representing the world in substates

problem-space.world
	^copy-type << deep shallow >>
		Whether the world copy is shallow (elaborates the same identifier)
			or deep (all substructure is deep copied)
	^source <world>
		The world to copy, if none is specified it defaults to superstate.world
		
deep-copy-world
	A structure created when the copy-type is deep
	Contains the following:
	
	source - the source world to copy from
	copy - the new world rep being deep copied (elaborated to state.world)
	
	copy-objects-map - structure used to deep copy objects
		entry
			source <src-obj> The source object to copy (from world.objects.object)
			copy <new-obj> The newly created copy of that object
	
	copy-predicates-map - structure used to deep copy predicates
		entry
			source <src-pred> The predicate to copy (from world.predicates.predicate)
			copy <new-pred>   The newly created predicate, with all instances deep copied
			
			
	
sp {comprehension*propose*conjuction-processing
   (state <s> ^name comprehension
              ^segment <seg>)
   (<seg> ^not-merged-receiver <receiver1> { <> <receiver1> <receiver2> })
   (<receiver1> ^delay-merge true
                ^decision-count <after>)
   (<receiver2> ^decision-count > <after>
                ^converts-to <c-type>)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name conjuction-processing
         ^conj-rec <receiver1>
         ^after-rec <reciever2>)
}

sp {comprehension*apply*conjuction-processing
   (state <s> ^operator <op>
              ^segment.not-merged-assigner <ass1>)
   (<ass1> ^parent-receiver <receiver1>
           ^lt.before <ass2>
           ^struture-type *unknown*)
   (<ass2> ^structure-type *unknown*)
   (<op> ^name conjuction-processing
         ^conj-rec <receiver1>
         ^after-rec <reciever2>)
   (<reciever2> ^lt.converts-to <c-type>
                ^structure-type <s-type>)
-->
   (<receiver1> ^lt.converts-to <c-type>
                ^structure-type <s-type>
                ^delay-merge true -)
   (<ass1> ^structure-type <c-type>
                           *unknown* -
           ^lt.attachment immediately-follow)  # a bit of a hack because it creates new lt
                                               # will grab the unmerge predecessor
   (<ass2> ^structure-type <c-type>
                           *unknown* -)
}

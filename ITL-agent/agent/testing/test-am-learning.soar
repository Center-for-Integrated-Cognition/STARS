sp {topstate*propose*test-am-learning
   (state <s> ^superstate nil)
-->
   (<s> ^operator <o> + =)
   (<o> ^name test-am-learning)
}

sp {topstate*prefer*attend-to-perception*over*test-am-learning
   (state <s> ^superstate nil
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name attend-to-perception)
   (<o2> ^name test-am-learning)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {test-am-learning*elaborate*problem-space
   (state <s> ^name test-am-learning)
-->
   (<s> ^problem-space <ps>)
   (<ps> ^name action
         ^execution-type internal
         ^action <a>
         ^learning <l>
         ^world <w>)
   (<w> ^copy-type deep)
}

sp {test-am-learning*propose*op_move1
   (state <s> ^name test-am-learning
              ^world <w>)
   (<w> ^objects.object <mug>
        ^objects.object <table>
        ^predicates.predicate <on-pred>)
  (<mug> ^predicates.category mug1)
   (<table> ^predicates.category table1)
   (<on-pred> ^handle on1)
   -{(<on-pred> ^instance <i>)
     (<i> ^1 <mug> ^2 <table>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name op_testmove1
        ^task-handle testmove1
        ^item-type task-operator
        ^arg1 <arg1>
        ^arg2 <arg2>)
   (<arg1> ^arg-type object
           ^id <mug>)
   (<arg2> ^arg-type partial-predicate
           ^handle on1
           ^2 <table>)
}

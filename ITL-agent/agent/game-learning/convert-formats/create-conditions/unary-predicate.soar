sp {create-object*elaborate*property-modifier
   :o-support
   (state <s> ^name create-object
              ^parameter.predicates <p>)
   (<p> ^property-modifier <mod>)
-->
   (<s> ^property-modifier <mod>)
}
sp {create-object*elaborate*previously
   :o-support
   (state <s> ^name create-object
              ^superstate <ss>
              ^property-modifier <mod>)
   (<mod> ^handle previously)
-->
   (<ss> ^modifier previously)
}
sp {create-object*propose*unary-predicate
   (state <s> ^name create-object
             -^condition.name <val>
              ^parameter <c>)
   (<c> ^predicates <p>)
   (<p> ^{<att> <> category <> quantified <> property-modifier <> dialog-object <> value <> handle <> type <> is-visible1 <> visible <> visibility <> multiple <> number} {<val> <> linear})
  -{(<p> ^<att> {<val> << moved >>})
    (<s> ^moved <mov>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name unary-predicate
        ^attribute <att>
        ^value <val>)
}
sp {create-object*propose*unary-predicate*linear
   (state <s> ^name create-object
             -^condition.name linear
              ^parameter <c>)
   (<c> ^predicates <p>)
   (<p> ^property linear)
-->
   (<s> ^operator <o> + =)
   (<o> ^name unary-predicate
        ^attribute relation
        ^value linear)
}
#JK fix hardcode, test item type visual not property
#TODO SMEM BAD retrieve instead of assuming primitive attribute types
sp {create-object*elaborate*condition
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<o> ^name unary-predicate
        ^attribute {<att> << color size shape name spatial-shape >>}
        ^value <val>)
   -{(<s> ^property-modifier <m>)
     (<m> ^handle negation ^modifying.handle <val>)}
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^parameter <p> ^type attribute ^attribute <att> ^args <a> ^rtype single)
   (<a> ^1 <cond>)
}
sp {create-object*elaborate*condition*negative
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<o> ^name unary-predicate
        ^attribute {<att> << color size shape name spatial-shape >>}
        ^value <val>)
   (<s> ^property-modifier <m>)
   (<m> ^handle negation ^modifying.handle <val>)
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^parameter <p> ^type attribute ^attribute <att> ^args <a> ^rtype single ^negative true)
   (<a> ^1 <cond>)
}
#all unary relation are over sets
sp {create-object*elaborate*condition*relation
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<o> ^name unary-predicate
        ^attribute relation
        ^value <val>)
    -{(<s> ^property-modifier <m>)
     (<m> ^handle negation ^modifying.handle <val>)}
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^parameter <p> ^type state-pair ^attribute preposition ^args <a> ^rtype set)
   (<a> ^1 <cond>)
}
#all unary relation are over sets
sp {create-object*elaborate*condition*relation*negative
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<o> ^name unary-predicate
        ^attribute relation
        ^value <val>)
    (<s> ^property-modifier <m>)
    (<m> ^handle negation ^modifying.handle <val>)
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^parameter <p> ^type state-pair ^attribute preposition ^args <a> ^rtype set ^negative true)
   (<a> ^1 <cond>)
}
sp {create-object*elaborate*condition*learned-predicate*moved
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<o> ^name unary-predicate
        ^value moved
        ^attribute property)
   -{(<s> ^property-modifier <m>)
     (<m> ^handle negation ^modifying.handle <val>)}
-->
   (<s> ^condition <co> ^moved <co>)
   (<co> ^name move1 ^args <a> ^parameter <para> ^type concept ^attribute action ^rtype single)
}
sp {create-object*elaborate*condition*learned-predicate
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<o> ^name unary-predicate
        -^value moved
        ^attribute property
        ^value <val>)
   -{(<s> ^property-modifier <m>)
     (<m> ^handle negation ^modifying.handle <val>)}
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^parameter <p> ^type concept ^attribute predicate ^args <a> ^rtype single)#^rtype <rtype>
   (<a> ^1 <cond>)
}
sp {create-object*elaborate*condition*learned-predicate*negative
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<o> ^name unary-predicate
        ^attribute property
       -^value moved
        ^value <val>)
   (<s> ^property-modifier <m>)
   (<m> ^handle negation ^modifying.handle <val>)
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^parameter <p> ^type concept ^attribute predicate ^args <a> ^rtype single ^negative true)
   (<a> ^1 <cond>)
}


## FOR GOAL DEMONSTRATION MODIFICATIONS
sp {goal-feature-modify*propose*learn-parameter
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type goal-feature-modify
        ^parameters <pa>)
-->
   (<s> ^operator <o> +)
   (<o> ^name goal-feature-tracking
	    ^parameter <pa>)
}

sp {state-demo-message*propose*learn-goal-demonstration
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type state-demo-message
        ^parameters.state-name <type>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-goal-demonstration
        ^type <type>)
}

sp {action-parameter-message*propose*learn-parameter
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type action-parameter-message
        ^parameters.parameter <obj>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-parameter
	    ^parameter <obj>)
}

#sp {action-next-parameter-message*propose*learn-parameter
#   (state <s> ^name dialog-event
#              ^purpose <p>)
#   (<p> ^type action-next-parameter-message
#        ^parameters.parameter <obj>)# ^parameters.type <type>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name learn-parameter
#        ^category svs
  #      ^finish-type <type>
#	    ^parameter <obj>)
#}

#make sure timing doesnt fight with elabs
#remove??
#sp {action-next-parameter-message*apply*learn-parameter*finish-conditions
#   (state <s> ^name dialog-event
#              ^operator <o>
#              ^top-state.current-game.learning <l>)
#   (<o> ^name learn-parameter
#        ^finish-type <type>)
#   (<l> ^type {<cond> << condition >>} ^arg <arg> ^parameter <type>)
#-->
#   (<l> ^type <cond> -)
#   (<l> ^arg <arg> -)
#   (<l> ^parameter <type> -)
#   (<l> ^type parameter ^arg (+ 1 <arg>))
#}

#sp {action-parameter-message*apply*learn-parameter*increase-arg
#   (state <s> ^name dialog-event
#              ^operator <o>
#              ^top-state.current-game.learning <l>)
#   (<o> ^name learn-parameter
#        -^finish-type)
#   (<l> ^type {<cond> << parameter >>} ^arg <arg>)
#-->
#   (<l> ^arg <arg> -)
#   (<l> ^arg (+ 1 <arg>))
#}



#LEARN CONDITION
sp {parameter-condition-message*propose*learn-condition
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type parameter-condition-message
        ^parameters <param>)
   (<param> ^parameter <type> ^attribute <cond>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-condition
        ^prep none
        ^negative false
        ^attribute <cond>
	    ^obja <obja>)
   (<obja> ^word object
          ^specifier DEF
          ^word <type>)
}
#sp {parameter-condition-message-relation*propose*learn-condition
#   (state <s> ^name dialog-event
#              ^purpose <p>)
#   (<p> ^type parameter-condition-message-relation
#        ^parameters <param>)
#   (<param> ^parameter <type> ^condition <cond> ^prep <prep> ^spec <spec> ^negative <val>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name learn-condition
#        ^category svs
#        ^prep <prep>
#        ^spec <spec>
#        ^negative <val>
#        ^condition <cond>
#	    ^parameter <type>)
#}

sp {parameter-condition-message-relation*propose*learn-condition
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type parameter-condition-message-relation
        ^parameters <param>)
   (<param> ^objb <objb> ^obja <obja> ^prep <prep> ^negative <val> -^objc)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-condition
        ^category svs
        ^prep <prep>
        ^negative <val>
        ^obja <obja>
	    ^objb <objb>)
}
sp {parameter-condition-message-relation*propose*learn-condition*3arg
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type parameter-condition-message-relation
        ^parameters <param>)
   (<param> ^objc <objc> ^objb <objb> ^obja <obja> ^prep <prep> ^negative <val>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-condition
        ^prep <prep>
        ^negative <val>
        ^obja <obja>
	    ^objb <objb>
        ^objc <objc>)
}

#sp {parameter-condition-message-relation*propose*learn-condition*paramref
#   (state <s> ^name dialog-event
#              ^purpose <p>)
#   (<p> ^type parameter-condition-message-relation
#        ^parameters <param>)
#   (<param> ^parameter <type> ^obj-desc <desc> ^prep <prep> ^spec <spec> ^negative <val>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name learn-condition
#        ^category svs
#        ^prep <prep>
#        ^spec <spec>
#        ^negative <val>
#        ^obj-desc <desc>
#	    ^parameter <type>)
#}
#sp {parameter-condition-message-relation*propose*learn-condition*linear
#   (state <s> ^name dialog-event
##              ^purpose <p>)
#   (<p> ^type parameter-condition-message-relation
#        ^parameters <param>)
#   (<param> ^parameter <type> ^condition1 <cond> ^condition2 <cond2> ^prep <prep> ^spec <spec> ^negative <val>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name learn-condition
#        ^category svs
#        ^prep <prep>
#        ^spec <spec>
#        ^negative <val>
#        ^condition1 <cond>
#        ^condition2 <cond2>
#	    ^parameter <type>)
#}

sp {action-name-message*propose*learn-action
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type action-name-message
        ^parameters <param>)
   (<param> ^action-name <name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-action
        ^action-name <name>
        ^category svs)
}
sp {action-name-message*propose*learn-action*multiplayer
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type action-name-message
        ^parameters <param>)
   (<param> ^multiplayer <name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-action
        ^multiplayer <name>
        ^category svs)
}

sp {verb-name-message*propose*learn-action
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type verb-name-message
        ^parameters <param>)
   (<param> ^verb-name <name> ^verb-prep <prep> ^a <p1> ^b <p2>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-action
        ^verb-name <name>
        ^verb-prep <prep> 
        ^a <p1> 
        ^b <p2>
        ^category svs)
}
sp {verb-name-message*propose*learn-actionref
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type verb-name-message
        ^parameters <param>)
   (<param> ^verb-name <name> ^verb-prep <prep> ^obja <p1> ^objb <p2>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-action
        ^verb-name <name>
        ^verb-prep <prep> 
        ^obja <p1> 
        ^objb <p2>
        ^category svs)
}

sp {heuristic-message*propose*learn-heuristic
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type heuristic-message
        ^parameters <param>)
   (<param> ^type action ^action1 <action1> ^action2 <action2>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-heuristic
        ^type action
        ^action1 <action1>
        ^action2 <action2>
        ^category svs)
}

sp {goal-name-message*propose*learn-goal
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type goal-name-message
        ^parameters <param>)
   (<param> ^goal-name <name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-goal
        ^goal-name <name>
        ^category svs)
}

sp {failure-name-message*propose*learn-failure
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type failure-name-message
        ^parameters <param>)
   (<param> ^failure-name <name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-failure
        ^failure-name <name>
        ^category svs)
}

sp {parameters-finished-message*propose*finish-parameters
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type parameters-finished-message)
-->
   (<s> ^operator <o> +)
   (<o> ^name finish-parameters
        ^category svs)
}
sp {parameters-finished-message*apply*finish-parameters*finish-conditions
   (state <s> ^name dialog-event
              ^operator <o>
              ^top-state.current-game.learning <l>)
   (<o> ^name finish-parameters)
   (<l> ^type {<cond> << condition >>})
-->
   (<l> ^type <cond> -)
   (<l> ^type parameter)
}

sp {actions-finished-message*propose*finish-actions
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type actions-finished-message
        ^parameters <param>)
-->
   (<s> ^operator <o> +)
   (<o> ^name finish-actions
        ^parameter <type>
        ^category svs)
}

sp {verbs-finished-message*propose*finish-verbs
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type verbs-finished-message
        ^parameters <param>)
-->
   (<s> ^operator <o> +)
   (<o> ^name finish-verbs
        ^parameter <type>
        ^category svs)
}

sp {game-over-message*propose*game-over
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type game-over-message
        ^parameters <param>)
-->
   (<s> ^operator <o> +)
   (<o> ^name game-over
        ^category svs)
}

sp {game-params-finished-message*propose*finish-game-params
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type game-params-finished-message
        ^parameters <param>)
-->
   (<s> ^operator <o> +)
   (<o> ^name finish-game-params
        ^parameter <type>
        ^category svs)
}

sp {game-heuristics-finished-message*propose*finish-failures
   (state <s> ^name dialog-event
              ^purpose <p>)
   (<p> ^type game-heuristics-finished-message
        ^parameters <param>)
-->
   (<s> ^operator <o> +)
   (<o> ^name finish-failures
        ^parameter <type>
        ^category svs)
}
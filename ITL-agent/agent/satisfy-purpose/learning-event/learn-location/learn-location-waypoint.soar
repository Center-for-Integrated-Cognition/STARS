sp {learn-location*propose*learn-location-waypoint
   (state <s> ^name learn-location
              ^current-waypoint <wp>
              ^location-id <loc>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-location-waypoint
        ^location-id <loc>
        ^waypoint <wp>)
}

sp {learn-location*apply*learn-location-waypoint*add
   (state <s> ^name learn-location
              ^operator <o>)
   (<o> ^name learn-location-waypoint
        ^location-id <loc>
        ^waypoint.handle <wp-handle>)
-->
   (<loc> ^waypoint <wp-handle>)
}
   
sp {learn-location*apply*learn-location-waypoint*store
   (state <s> ^name learn-location
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name learn-location-waypoint
        ^location-id <loc>)
-->
   (<cmd> ^store <loc>)
}

sp {learn-location*apply*learn-location-waypoint*say*ok
   (state <s> ^name learn-location
              ^operator <o>
              ^smem.result.success <loc>
              ^top-state.interaction.changes <changes>)
   (<o> ^name learn-location-waypoint
        ^location-id <loc>)
-->
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type ok
          ^complete-message true)
}

sp {learn-location*apply*learn-location-waypoint*add*current-location*world
   (state <s> ^name learn-location
              ^operator <o>
              ^top-state.world.robot <robot>)
   (<o> ^name learn-location-waypoint
        ^location-id <loc>)
-->
   (<robot> ^current-location <loc>)
}

sp {learn-location*apply*learn-location-waypoint*report*success
   (state <s> ^name learn-location
              ^operator <o>
              ^smem.result.success <loc>
              ^top-state.interaction.status <status>)
   (<o> ^name learn-location-waypoint
        ^location-id <loc>)
-->
   (<status> ^performed.learning-event.type location)
}

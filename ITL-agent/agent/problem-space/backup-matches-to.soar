# ENUMERATE: 0-5 TASK ARGUMENTS
# If everything matches, elaborates ^successful-match yes on the candidate

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*0*arg
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-info <info>
              ^candidate <cand>)
   (<info> ^num-args 0)
   (<cand> ^matches-handle yes
           ^task-operator <task-op>)
   (<task-op> -^{ <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg1>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*1*arg
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-info <info>
              ^candidate <cand>)
   (<info> ^num-args 1
           ^arg-name <a1>)
   (<cand> ^matches-handle yes
           ^matches-arg <a1>
           ^task-operator <task-op>)
   (<task-op> -^{ <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg2>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*2*arg
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-info <info>
              ^candidate <cand>)
   (<info> ^num-args 2
           ^arg-name <a1>
           ^arg-name { <a2> > <a1> })
   (<cand> ^matches-handle yes
           ^matches-arg <a1>
           ^matches-arg <a2>
           ^task-operator <task-op>)
   (<task-op> -^{ <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg3>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*3*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-info <info>
              ^candidate <cand>)
   (<info> ^num-args 3
           ^arg-name <a1>
           ^arg-name { <a2> > <a1> }
           ^arg-name { <a3> > <a2> })
   (<cand> ^matches-handle yes
           ^matches-arg <a1>
           ^matches-arg <a2>
           ^matches-arg <a3>
           ^task-operator <task-op>)
   (<task-op> -^{ <a4> <> <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg4>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*4*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-info <info>
              ^candidate <cand>)
   (<info> ^num-args 4
           ^arg-name <a1>
           ^arg-name { <a2> > <a1> }
           ^arg-name { <a3> > <a2> }
           ^arg-name { <a4> > <a3> })
   (<cand> ^matches-handle yes
           ^matches-arg <a1>
           ^matches-arg <a2>
           ^matches-arg <a3>
           ^matches-arg <a4>
           ^task-operator <task-op>)
   (<task-op> -^{ <a5> <> <a4> <> <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg5>)
-->
   (<cand> ^successful-match yes)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate*successful-match*yes*5*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-info <info>
              ^candidate <cand>)
   (<info> ^num-args 5
           ^arg-name <a1>
           ^arg-name { <a2> > <a1> }
           ^arg-name { <a3> > <a2> }
           ^arg-name { <a4> > <a3> }
           ^arg-name { <a5> > <a4> })
   (<cand> ^matches-handle yes
           ^matches-arg <a1>
           ^matches-arg <a2>
           ^matches-arg <a3>
           ^matches-arg <a4>
           ^matches-arg <a5>
           ^task-operator <task-op>)
   (<task-op> -^{ <a6> <> <a5> <> <a4> <> <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg6>)
-->
   (<cand> ^successful-match yes)
}


sp {convert-state-to-TCN*propose*create-parameter
   (state <s> ^name convert-state-to-TCN
              ^arg <arg>
             -^tcn.parameters.<arg>
             -^param.<something> <obj>
              ^state-rep.objects.object <obj>)
 #  (<obj> ^id <id>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-parameter
        ^obj <obj>)
}
sp {convert-state-to-TCN*apply*create-parameter
   (state <s> ^name convert-state-to-TCN
              ^arg <arg>
              ^param <params>
              ^tcn.parameters <pa>
              ^state-rep.objects.object <obj>
              ^operator <o>)
   (<obj> ^predicates.category <type>)
   (<o> ^name create-parameter
        ^obj <obj>)
-->
   (<pa> ^<arg>.type <type>)
   (<params> ^<arg> <obj>)
   (<s> ^arg <arg> -)
   (<s> ^arg (+ <arg> 1))
}
sp {convert-state-to-TCN*propose*create-condition
   (state <s> ^name convert-state-to-TCN
              ^tcn.parameters.<arg>
             -^default-finish <arg>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-condition
        ^arg <arg>)
}

sp {convert-state-to-TCN*apply*create-condition
   (state <s> ^name convert-state-to-TCN
              ^param.<arg> <obj>
              ^tcn.conditions <co>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
-->
   (<co> ^<arg> <cond>)
}
sp {convert-state-to-TCN*apply*create-condition*objdesc
   (state <s> ^name convert-state-to-TCN
              ^param.<arg> <obj>
              ^tcn.conditions.<arg> <co>
              ^state-rep.predicates.predicate <ps>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
   (<ps> ^object <obj> ^name <attr> ^value <word>)
-->
   (<co> ^attribute.<attr> <word>)
}

sp {convert-state-to-TCN*apply*create-condition*default
   (state <s> ^name convert-state-to-TCN
              ^tcn.parameters.<arg>
              ^tcn.conditions.<arg>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
-->
   (<s> ^default-finish <arg>)
}

sp {convert-state-to-TCN*apply*create-condition*rels
   (state <s> ^name convert-state-to-TCN
              ^param.<arg> <obja>
              ^param.<arg2> <objb>
              ^tcn.conditions.cond <co>
              ^state-rep.objects.object <objb>
              ^state-rep.relationships.relations <rel>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
   (<objb> ^predicates.category <type>)
   (<rel> ^name <name> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <objb> -^3)
-->
   (<co> ^prep <prep>)
   (<prep> ^name <name> ^1 <arg> ^2 <arg2> ^btype <type> ^negative false)
}

sp {convert-state-to-TCN*apply*create-condition*rels*3args
   (state <s> ^name convert-state-to-TCN
              ^param.<arg> <obj>
              ^param.<arg2> <objb>
              ^param.<arg3> <objc>
              ^tcn.conditions.cond <co>
              ^state-rep.objects.object <obj>
              ^state-rep.objects.object <obj2>
              ^state-rep.relationships.relations <rel>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
   (<objb> ^predicates.category <type>)
   (<rel> ^name <name> ^instance <instance>)
   (<instance> ^1 <obj> ^2 <objb> ^3 <objc>)
-->
   (<co> ^prep <prep>)
   (<prep> ^name <name> ^1 <arg> ^2 <arg2> ^3 <arg3> ^btype <type> ^negative false)
}


sp {convert-state-to-TCN*propose*complete-state
   (state <s> ^name convert-state-to-TCN)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-state
        ^category svs)
}

sp {convert-state-to-TCN*apply*complete-state*copyrels
#   :interrupt
   (state <s> ^name convert-state-to-TCN
              ^tcn <tcn>
              ^arg <arg>
              ^operator.name complete-state)
-->
   (<tcn> ^cond-args (- <arg> 1))
}

sp {convert-state-to-TCN*apply*complete-state
   (state <s> ^name convert-state-to-TCN
             # ^superstate.operator <op>
              ^superstate <ss>
              ^tcn <tcn>
              ^param <params>
              ^operator.name complete-state)
   (<tcn> ^cond-args)
-->
   (<ss> ^tcn <tcn>
         ^param <params>)
}
sp {with-attribute*elaborate*results*set*instance
   (state <s> ^name with-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p>)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> -^rtype set)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <set> ^3 <attr> ^2 <name>)
}

sp {with-attribute*elaborate*results*set*instance*sets
   (state <s> ^name with-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p> ^negative false)
   (<args> ^1 <a1> 
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^rtype set -^parameter.num 0 ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
  -{(state <ls>) 
     (<obja> -^<x1>)}
   -{(<obja> ^<elem> <e>)
     (<e> -^predicates.<attr> <name>)}
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr> ^2 <name>)
}
sp {with-attribute*elaborate*results*set*instance*sets*negative
   (state <s> ^name with-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p> ^negative true)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^rtype set -^parameter.num 0 ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
  -{(state <ls>) 
     (<obja> -^<x1>)}
   -{(<obja> ^<elem> <e>)
     (<e> ^predicates.<attr> <name>)}
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr> ^2 <name>)
}
sp {with-attribute*elaborate*results*set*instance*sets*no-param
   (state <s> ^name with-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p>)
   (<args> ^1 <a1> 
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^rtype set ^parameter.num 0)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
    -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <set> ^3 <attr> ^2 <name>)
}

sp {with-attribute*apply*complete*instance*objects*set-set
   (state <s> ^name with-attribute
              ^operator <op>
              #^instance <oz> #JAMES UNCHUNKED VERSION
              ^superstate.condition.rtype set
              ^superstate.condition.result.set.instance <oz>
              ^superstate.operator <oper>)
   (<oper> ^args <args> ^negative false)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set.instance.{1}.object <obja> ^rtype set ^parameter.num 0)
   (<a2> ^result.set.instance.{1} <attr1>)
   (<a3> ^result.set.instance.{1} <name1>)
   (<obja> ^predicates <ppz>)
   (<ppz> ^<attr1> <name1>)
   (<op> ^name complete ^instance <oz>) #JAMES UNCHUNKED VERSION
   (<oz> ^2 <name1> ^3 <attr1> ^1 <set>)
-->
   (<set> ^object <obja>)
}
sp {with-attribute*apply*complete*instance*objects*set-set*negative
   (state <s> ^name with-attribute
              ^operator <op>
              #^instance <oz> #JAMES UNCHUNKED VERSION
              ^superstate.condition.rtype set
              ^superstate.condition.result.set.instance <oz>
              ^superstate.operator <oper>)
   (<oper> ^args <args> ^negative true)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set.instance.{1}.object <obja> ^rtype set ^parameter.num 0)
   (<a2> ^result.set.instance.{1} <attr1>)
   (<a3> ^result.set.instance.{1} <name1>)
   (<obja> ^predicates <ppz>)
   (<ppz> -^<attr1> <name1>)
   (<op> ^name complete ^instance <oz>) #JAMES UNCHUNKED VERSION
   (<oz> ^2 <name1> ^3 <attr1> ^1 <set>)
-->
   (<set> ^object <obja>)
}

#Here
sp {with-attribute*elaborate*results*0-param*primitive
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^linkstate.world.objects.object <obja>
              ^superstate.operator <o>)
   (<o> ^args <args>)
   (<args> -^1 <a1> -^2) 
   (<obja> -^handle self) #JK hack to not reason over self as object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}

sp {with-attribute*elaborate*results*0-param
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^linkstate.world.objects.object <obja>
              ^superstate.operator <o>)
   (<o> ^args <args> ^negative false)
   (<args> -^1 <a1> 
            ^3 <a2>
            ^2 <a3>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppz>)
   (<ppz> ^<attr> <name>)
    -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {with-attribute*elaborate*results*0-param*negative
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^linkstate.world.objects.object <obja>
              ^superstate.operator <o>)
   (<o> ^args <args> ^negative true)
   (<args> -^1 <a1> 
            ^3 <a2>
            ^2 <a3>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppz>)
   (<ppz> -^<attr> <name>)
    -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {with-attribute*elaborate*results*1-param
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp> ^negative false)
   (<pp> ^num < 2)
   (<args> ^1 <a1> 
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppz>)
   (<ppz> ^<attr> <name>)
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {with-attribute*elaborate*results*1-param*negative
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp> ^negative true)
   (<pp> ^num < 2)
   (<args> ^1 <a1> 
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppz>)
   (<ppz> -^<attr> <name>)
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {with-attribute*elaborate*results*3-param
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp>)
   (<pp> ^num 3)
   (<args> ^1 <a1> 
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppz>)
   (<ppz> ^<attr> <name>)
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr> ^2 <name>)
}

#weird rule???
sp {with-attribute*elaborate*results*2-parama
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp> ^negative false)
   (<pp> ^num 2 ^3 <p2>) 
   (<args> ^1 <a1> 
            ^3 <a2>
            ^2 <a3>)
   (<a1> ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppz>)
   (<ppz> ^<attr> <name>)
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr>)
}
sp {with-attribute*elaborate*results*2-parama*negative
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp> ^negative true)
   (<pp> ^num 2 ^3 <p2>) 
   (<args> ^1 <a1> 
            ^3 <a2>
            ^2 <a3>)
   (<a1> ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppz>)
   (<ppz> -^<attr> <name>)
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr>)
}

sp {with-attribute*elaborate*results*2-paramb
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp> ^negative false)
   (<pp> ^num 2 ^2 <p3>)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppp>)
   (<ppp> ^<attr> <name>)
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <name>)
}
sp {with-attribute*elaborate*results*2-paramb*negative
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp> ^negative true)
   (<pp> ^num 2 ^2 <p3>)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set <s32>)
   (<s32> ^instance <i52>)
   (<i52> ^1 <obja>)
   (<a2> ^result.set <s3>)
   (<s3> ^instance <i5>)
   (<i5> ^1 <attr>)
   (<a3> ^result.set <s35>)
   (<s35> ^instance <i55>)
   (<i55> ^1 <name>)
   (<obja> ^predicates <ppp>)
   (<ppp> -^<attr> <name>)
 -{(<s32> ^instance {<i82> < <i52>})
   (<i82> ^1 <obja>)} #bias only create one per object
 -{(<s3> ^instance {<i8> < <i5>})
   (<i8> ^1 <attr>)} #bias only create one per object
 -{(<s35> ^instance {<i9> < <i55>})
   (<i9> ^1 <name>)} #bias only create one per object
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <name>)
}


sp {with-attribute*propose*complete
   (state <s> ^name with-attribute
              ^instance <e>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <e>)
}
sp {with-attribute*apply*complete*instance
   (state <s> ^name with-attribute
              ^operator <op>
              #^instance <o> #JAMES UNCHUNKED VERSION
              ^superstate.condition.result.set <res>)
   (<op> ^name complete ^instance <o>) #JAMES UNCHUNKED VERSION
-->
   (<res> ^instance <o>)
}
sp {with-attribute*apply*complete*instance*objects
   (state <s> ^name with-attribute
              ^operator <op>
              #^instance <oz> #JAMES UNCHUNKED VERSION
              ^superstate.condition.rtype set
              ^superstate.condition.result.set.instance <oz>
              ^superstate.operator <oper>)
   (<oper> ^args <args> ^negative false)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set.instance.{1} <obja> -^rtype set)
   (<a2> ^result.set.instance.{1} <attr1>)
   (<a3> ^result.set.instance.{1} <name1>)
   (<obja> ^predicates.<attr1> <name1>)
   (<op> ^name complete ^instance <oz>)#JAMES UNCHUNKED VERSION
   (<oz> ^2 <name1> ^3 <attr1> ^1 <set>)
-->
   (<set> ^object <obja>)
}

sp {with-attribute*apply*complete*instance*objects*negative
   (state <s> ^name with-attribute
              ^operator <op>
              #^instance <oz> #JAMES UNCHUNKED VERSION
              ^superstate.condition.rtype set
              ^superstate.condition.result.set.instance <oz>
              ^superstate.operator <oper>)
   (<oper> ^args <args> ^negative true)
   (<args> ^1 <a1>
           ^3 <a2>
           ^2 <a3>)
   (<a1> ^result.set.instance.{1} <obja> -^rtype set)
   (<a2> ^result.set.instance.{1} <attr1>)
   (<a3> ^result.set.instance.{1} <name1>)
   (<obja> ^predicates <ppp>)
   (<ppp> -^<attr1> <name1>)
   (<op> ^name complete ^instance <oz>)#JAMES UNCHUNKED VERSION
   (<oz> ^2 <name1> ^3 <attr1> ^1 <set>)
-->
   (<set> ^object <obja>)
}
#maybe create multiple conditions and have that flagged with version numbers?
#bias here for version number?
sp {create-condition*apply*create-name
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
			 -^function
         -^agent-params.learn-multiple-versions true
     		-^smem-result.function
			-^smem-result.property.handle number
              ^condition-handle <handle>)
   (<o> ^name create-name
   		^handle <handle>)
-->
(interrupt)
   (<c> ^name <handle>)
}

#issue for numbers..
#add this test -^smem-result.property.handle number
sp {create-condition*apply*create-name*multiple
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
			 -^function
          ^agent-params.learn-multiple-versions true
         -^smem-results.property.handle number
         -^smem-results.property.property.handle numeric
     		 ^smem-results.handle <handle>)
   (<o> ^name create-name)
-->
(interrupt)
   (<c> ^name <handle>)
}

sp {create-condition*apply*create-name*function
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
     		  ^function <f>)
   (<f> ^type <name> ^function <func>)
   (<o> ^name create-name)
-{(<f> ^function << soar-greater soar-less >>)
  (<s> ^clause <cc>)
  (<cc> ^number-mod <n>)}#hacky fix, what is better general way?
-->
   (<c> ^name <name> ^function <func>)
}

sp {create-condition*apply*create-name*function*soar-x-less
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
			  ^clause <cc>
     		  ^function <f>)
   (<f> ^function soar-less)
   (<o> ^name create-name)
   (<cc> ^number-mod.handle <hn>)#hacky fix, what is better general way?
-->
   (<c> ^name <hn> ^function soar-x-less)
}

sp {create-condition*apply*create-name*function*soar-x-greater
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
			  ^clause <cc>
     		  ^function <f>)
   (<f> ^function soar-greater)
   (<o> ^name create-name)
   (<cc> ^number-mod.handle <hn>)#hacky fix, what is better general way?
-->
   (<c> ^name <hn> ^function soar-x-greater)
}

#todo here for number, create property or leave it number? hmmm
#wwwww
sp {create-condition*apply*create-name*number
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
			 -^negative true
     		  ^smem-result.property.handle number
              ^condition-handle <handle>)
   (<o> ^name create-name
   		^handle <handle>)
-->
   (<c> ^name number)
}
sp {create-condition*apply*create-name*number*numeric-property
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <c>
			 -^negative true
     		  ^smem-result.property.property.handle << numeric number >>
              ^condition-handle <handle>)
   (<o> ^name create-name
   		^handle <handle>)
-->
   (<c> ^name number)
}

sp {create-condition*apply*create-name*number*negative3
   (state <s> ^name create-condition
              ^operator <o>
              ^condition <co>
              ^clause <c1>
              -^param1 
              ^rtype <rtype1>
              ^object-count <oc>
              ^not-equal-to <eq>
              ^superstate <ss>
              ^negative true
               ^smem-result.property.handle number
              ^condition-handle <handle>)
   (<eq> ^formatted <f1> ^parameter-index <pi>)
   (<o> ^name create-name
           ^handle <handle>)
   (<ss> ^object-count <oc>)
 -{(<eq> ^formatted {<fff> > <f1>})}
-->
   (<c1> ^formatted <co> ^parameter-index <oc>)
   (<ss> ^object-count <oc> -)
   (<ss> ^object-count (+ 1 <oc>))
   ##(<ss> ^nlp <co>)  #JK no nlp
   (<co> ^name not-equal ^args <aa> ^parameter <para> ^rtype <rtype1> ^return-type number ^type function ^function soar-not-equal)
   (<aa> ^2 <f1> ^1 <f2>)
   (<f2> ^name number ^result.set.instance <i> ^args <ax> ^parameter <paraf> ^rtype single ^return-type number)
   (<i> ^1 <handle>)
   (<para> ^2 <para1> ^1 <para2>)
   (<para1> ^param-id <pi> ^type <rtype1>) 
   (<para2> ^param-id <oc> ^type <rtype1>)
}
sp {create-condition*apply*create-name*number*negative2
   (state <s> ^name create-condition
              ^operator <o>
              ^condition <co>
              ^clause <c1>
              ^param1 <pi> 
              ^rtype <rtype1>
              ^object-count <oc>
              ^not-equal-to <eq>
              ^superstate <ss>
              ^negative true
               ^smem-result.property.handle number
              ^condition-handle <handle>)
   (<eq> ^formatted <f1>)
   (<o> ^name create-name
           ^handle <handle>)
   (<ss> ^object-count <oc>)
 -{(<eq> ^formatted {<fff> > <f1>})}
-->
   (<c1> ^formatted <co> ^parameter-index <oc>)
   (<ss> ^object-count <oc> -)
   (<ss> ^object-count (+ 1 <oc>))
   #(<ss> ^nlp <co>)  #JK no nlp
   (<co> ^name not-equal ^args <aa> ^parameter <para> ^rtype <rtype1> ^return-type number ^type function ^function soar-not-equal)
   (<aa> ^2 <f1> ^1 <f2>)
   (<f2> ^name number ^result.set.instance <i> ^args <ax> ^parameter <paraf> ^rtype single ^return-type number)
   (<i> ^1 <handle>)
   (<para> ^2 <para1> ^1 <para2>)
   (<para1> ^param-id <pi> ^type <rtype1>) 
   (<para2> ^param-id <oc> ^type <rtype1>)
}
sp {create-condition*apply*create-name*number*negative
   (state <s> ^name create-condition
			  ^operator <o>
			  ^condition <co>
			  ^clause <c1>
			  ^param1 <pi>
			  ^rtype <rtype1>
			  ^object-count <oc>
			  ^equal-to <eq>
			  ^superstate <ss>
			  ^negative true
     		  ^smem-result.property.handle number
              ^condition-handle <handle>)
   (<eq> ^formatted <f1>)
   (<o> ^name create-name
   		^handle <handle>)
   (<ss> ^object-count <oc>)
 -{(<eq> ^formatted {<fff> > <f1>})}
-->
   (<c1> ^formatted <co> ^parameter-index <oc>)
   (<ss> ^object-count <oc> -)
   (<ss> ^object-count (+ 1 <oc>))
   #(<ss> ^nlp <co>)  #JK no nlp
   (<co> ^name not-equal ^args <aa> ^parameter <para> ^rtype <rtype1> ^return-type number ^type function ^function soar-not-equal)
   (<aa> ^2 <f1> ^1 <f2>)
   (<f2> ^name number ^result.set.instance <i> ^args <ax> ^parameter <paraf> ^rtype single ^return-type number)
   (<i> ^1 <handle>)
   (<para> ^2 <para1> ^1 <para2>)
   (<para1> ^param-id <pi> ^type <rtype1>) 
   (<para2> ^param-id <oc> ^type <rtype1>)
}
#### create-belief-object
# Creates a belief object for an object by copying the perception-obj

# Send copy_node command to svs
sp {anystate*apply*change-world-state*create-belief-object*svs*create_node*tabletop
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>
              ^agent-params.domain << tabletop fetch ai2thor >>)
   (<o> ^name change-world-state
        ^create-belief-object <obj-info>)
   (<obj-info> ^perception-id <perc-id>
               ^belief-id <bel-id>)
-->
   (<cmd> ^copy_node <copy>)
   (<copy> ^id <bel-id>
           ^source <perc-id>
           ^adjust true)
}

# Send copy_node command to svs 
sp {anystate*apply*change-world-state*create-belief-object*svs*create_node*magicbot
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>
              ^agent-params.domain << magicbot cozmo >>)
   (<o> ^name change-world-state
        ^create-belief-object <obj-info>)
   (<obj-info> ^perception-id <perc-id>
               ^belief-id <bel-id>)
-->
   (<cmd> ^copy_node <copy>)
   (<copy> ^id <bel-id>
           ^source <perc-id>
           ^adjust false)
}

# Send add_node command to svs using specified parameters
sp {anystate*apply*change-world-state*create-belief-object*svs*copy_node*given*params
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name change-world-state
        ^create-belief-object <obj-info>)
   (<obj-info> ^belief-id <bel-id>
               ^position <pos>
               ^rotation <rot>
               ^scale <scl>)
   (<pos> ^x <px> ^y <py> ^z <pz>)
   (<rot> ^x <rx> ^y <ry> ^z <rz>)
   (<scl> ^x <sx> ^y <sy> ^z <sz>)
-->
   (<cmd> ^add_node <add>)
   (<add> ^id <bel-id>
          ^parent world
          ^geometry box
          ^position <npos>
          ^rotation <nrot>
          ^scale <nscl>
          ^tags <tags>)
   (<npos> ^x <px> ^y <py> ^z <pz>)
   (<nrot> ^x <rx> ^y <ry> ^z <rz>)
   (<nscl> ^x <sx> ^y <sy> ^z <sz>)
   (<tags> ^object-source belief)
}


# If print-perception is on, print a message
sp {anystate*apply*change-world-state*create-belief-object*print-perception*print
   (state <s> ^operator <o>
              ^agent-params.print-perception true)
   (<o> ^name change-world-state
        ^create-belief-object.belief-id <bel-id>)
-->
   (write |change-world-state: create-belief-object | <bel-id> (crlf))
}
   

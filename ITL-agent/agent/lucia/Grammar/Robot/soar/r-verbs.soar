#   Soar code produced automatically 
#   from file 'C:\Users\plind\OneDrive\GitHub\PLCode\Lucia\Grammars\Robot\ecg\r-verbs.ecg'.

#   SCAN construction
sp {comprehend-word*apply*lexical-access*SCAN-scan
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^input.word <word>)
   (<o> ^name lexical-access)
   (<word> ^orth |scan|
           ^content <content1>)
-->
   (<s> ^cxn <cxn>)
   (<cxn> ^cxn-name SCAN
          ^is <a>
          ^orth |scan|
          ^text <content1>
          ^f <form>
          ^m <meaning>
          ^subcase-of SimpleMotionVerb
          ^first-lex nil
          ^evokes <e-meaning>)
   (<a> ^a SCAN)
   (<e-meaning> ^schema ActionDescriptor
                ^target <meaning>)
}

#   SCAN self.m.class <-- @action constraint
sp {comprehend-word*SCAN-constraint*self-m-class*ASSIGN*AT-action
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a SCAN
          ^orth |scan|
          ^m <l-slot1>)
   (<l-slot1> ^class { <target> <> |action| })
-->
   (<l-slot1> ^class <target> -
              ^class |action|)
}

#   SCAN self.m.name <-- "scan1" constraint
sp {comprehend-word*SCAN-constraint*self-m-name*ASSIGN*scan1
   (state <s> ^problem-space comprehend-word
              ^operator <o>
              ^cxn <cxn>)
   (<o> ^type construction)
   (<cxn> ^is.a SCAN
          ^orth |scan|
          ^m <l-slot1>)
   (<l-slot1> ^name { <target> <> |scan1| })
-->
   (<l-slot1> ^name <target> -
              ^name |scan1|)
}


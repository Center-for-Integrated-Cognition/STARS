#handle-property-predicate
#handle-action-predicate
#handle-pref-action

sp {create-condition*elaborate*superstate*object-count
   (state <s> ^name create-condition
              ^superstate <ss>)
   (<ss> ^object-count <oc>)
-->
   (<s> ^object-count <oc>)
}
sp {create-condition*elaborate*superstate*output-object-1
   (state <s> ^name create-condition
              ^superstate <ss>)
   (<ss> ^output-object-1 <c>)
-->
   (<s> ^output-object-1 <c>)
}
sp {create-condition*elaborate*superstate*action-count
   (state <s> ^name create-condition
              ^superstate <ss>)
   (<ss> ^action-count <oc>)
-->
   (<s> ^action-count <oc>)
}

sp {create-condition*elaborate*super-operator*condition
   (state <s> ^name create-condition
              ^superstate.operator <so>)
   (<so> ^name create-condition 
         ^condition <co>)
-->
#(write (cmd print <so> -d 4))
   (<s> ^clause <co>)
}

sp {create-condition*elaborate*super-operator*unary-attribute
   (state <s> ^name create-condition
              ^superstate.operator <so>)
   (<so> ^name create-condition 
         ^attribute <at>)
-->
  (<s> ^unary-attribute <at>)
}

sp {create-condition*elaborate*super-operator*value
   (state <s> ^name create-condition
              ^superstate.operator <so>)
   (<so> ^name create-condition 
         ^value <at>)
-->
   (<s> ^condition-name <at>)
}

sp {create-condition*elaborate*superstate*version-set*smem-result
   (state <s> ^name create-condition
   		  	  ^condition-name <at>
              ^superstate <ss>)
   (<ss> ^version-set.<at>.smem-result <sr>)
-->
   (<s> ^smem-result <sr>)
}
sp {create-condition*elaborate*superstate*version-set*synonym-version
   (state <s> ^name create-condition
   		  	  ^condition-name <at>
              ^superstate <ss>)
   (<ss> ^version-set.<at> <it>)
   (<it> ^auto synonym ^smem-result <sr>)
-->
   (<s> ^synonym-version true)
}
sp {create-condition*elaborate*superstate*version-set*antonym-version
   (state <s> ^name create-condition
   		  	  ^condition-name <at>
              ^superstate <ss>)
   (<ss> ^version-set.<at> <it>)
   (<it> ^auto antonym ^smem-result <sr>)
-->
   (<s> ^antonym-version true
        ^negative true)
}

sp {create-condition*elaborate*superstate*version-list*smem-result
:o-support
   (state <s> ^name create-condition
              ^condition <c>
             -^superstate.version-set <vs>
			  ^superstate.superstate <ss> 
              ^condition-name <handle>)
   (<ss> -^completed-version 1 ^version-list <vl>)
   (<vl> ^version <v>)
   (<v> ^handle-spelling <handle> ^item <it>)
   (<it> ^smem-result <sr>)
 -{(state <s>)
   (<v> ^item {<it1> < <it>})}
-->
   (<s> ^smem-result <sr>)
}

sp {create-condition*elaborate*smem-result*condition-handle
   (state <s> ^name create-condition
              ^smem-result <sr>)
   (<sr> ^handle <cn>)
-->
   (<s> ^condition-handle <cn>)
}

sp {create-condition*elaborate*clause*condition-name
   (state <s> ^name create-condition
   		  	 -^param true
   		  	  ^clause <co>)
   (<co> ^<< handle name >> {<cname> <> of1} -^item-type object)
-->
   (<s> ^condition-name <cname>)
}

sp {create-condition*elaborate*clause*condition-name*predicate
   (state <s> ^name create-condition
   		  	 -^param true
   		  	  ^clause.predicate <co>)
   (<co> -^item-type object  ^<< handle name >> {<cname> <> of1})
  -{(<co> ^handle in1)
    (<s> -^superstate.superstate.world.predicates.predicate.handle in1)}
-->
   (<s> ^condition-name <cname>)
}
#in1 add case
sp {create-condition*elaborate*clause*in-set*condition-name*predicate
   (state <s> ^name create-condition
   		  	 #-^param true
		     -^superstate.superstate.world.predicates.predicate.handle in1
   		  	  ^clause.predicate <co>)
   (<co> -^item-type object  ^<< handle name >> in1 ^2 <c2> -^3)
    (<c2> ^predicates.property <name>)
-->
   (<s> ^condition-name <name>)
}

sp {create-condition*elaborate*clause*in-set*condition-name
   (state <s> ^name create-condition
             -^superstate.superstate.world.predicates.predicate.handle in1
   		  	  ^relation <r>)
    (<r> ^handle in1 ^2 <c2> -^3)
    (<c2> ^predicates.property <name>)
-->
   (<s> ^condition-name <name>)
}

sp {create-condition*elaborate*smem-query
   (state <s> ^name create-condition
              ^smem.command <c>
			  ^condition-name <handle>)
-->	
   (<c> ^query <cue>
        ^neg-query <ncue> #TODO add neg cue for handle-spelling
        ^depth 5)
   (<cue> ^spelling <handle>)
   (<ncue> ^multiple true)
}
sp {create-condition*elaborate*smem-query*structure-type
:o-support
   (state <s> ^name create-condition
   		  	  ^superstate <ss>
              ^smem.result.retrieved <rr>)
   (<rr> ^structure-type <n>)
-->
   (<s> ^structure-type <n>)
}

sp {create-condition*elaborate*clause*agent
   (state <s> ^name create-condition
   		  	 -^param true
   		  	  ^clause.agent <co>)
  -{(state <s>)
    (<co> -^formatted)}
-->
   (<s> ^agent <co>)
}
sp {create-condition*elaborate*param1*formatted*agent
   (state <s> ^name create-condition
              -^param true
			  ^condition-type same-attribute
			 -^equal-to
   		  	  ^agent <co>)
   (<co> ^parameter-index <id>)
-->
   (<s> ^param1 <id>)
}
sp {create-condition*elaborate*arg1*formatted*agent
   (state <s> ^name create-condition
              -^param true
   		  	  ^agent <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg1 <f>)
}
sp {create-condition*elaborate*arg1*rtype*agent
   (state <s> ^name create-condition
              -^param true
   		  	  ^agent <co>)
   (<co> ^rtype <rtype>)
-->
   (<s> ^rtype <rtype>)
}
sp {create-condition*elaborate*arg1*rtype*input-arg
   (state <s> ^name create-condition
              -^param true
   		  	  ^clause.arg1 <co>)
   (<co> ^rtype <rtype> ^formatted <f>)
   (<f> -^parameter.{1} ^attribute input-arg)
-->
   (<s> ^rtype <rtype>)
}
sp {create-condition*elaborate*clause*condition-name*same-attribute
   (state <s> ^name create-condition
   		  	 -^param true
			 ^clause <c> 
			 ^condition <co>)
   (<c> ^action.handle << has has1 >> ^arg1.handle same ^arg1 <a2>)
   (<a2> ^handle {<name> <> same})
-->
   (<s> ^condition-type same-attribute)
   (<co> ^name <name>)#todo ok to skip over condition-name,smem-version-retrieve?
}
sp {create-condition*elaborate*clause*action
   (state <s> ^name create-condition
   		   	  ^clause <co>)
   (<co> ^action <ac>)
   (<ac> -^handle << is has is1 has1 lose1 lose win win1 of1 >>) #not actual action
-->
   (<s> ^action <ac>)
}
sp {create-condition*elaborate*smem-result*return-type
   (state <s> ^name create-condition
   		  	 -^equal-to.handle absent
   		  	  ^smem-result.property.handle << number numeric >>)
-->
   (<s> ^return-type number)
}
sp {create-condition*elaborate*smem-result*return-type2
   (state <s> ^name create-condition
   		  	 -^equal-to.handle absent
   		  	  ^smem-result.property.property.handle << number numeric >>)
-->
   (<s> ^return-type number)
}
sp {create-condition*elaborate*clause*parameter*condition-name
   (state <s> ^name create-condition
   		  	  ^relation <r>)
   (<r> ^<< handle name >> {<cname> <> of1})
  -{(<r> ^handle in1)
    (<s> -^superstate.superstate.world.predicates.predicate.handle in1)}
-->
   (<s> ^condition-name <cname>)
}


sp {create-condition*elaborate*clause*subset
   (state <s> ^name create-condition
   		  	  ^clause <c>
   		  	  ^relation <r>)
   (<c> ^item-type object ^predicates.number <n>)
   (<r> ^<< handle name >> of1)
-->
   (<s> ^function <f> ^rtype set)
   (<f> ^function subset-of ^type <n>)
}
sp {create-condition*elaborate*clause*arg2*relation
   (state <s> ^name create-condition
   		  	  -^param true
   		  	  ^clause.{2} <r>)
   (<r> ^2 <x>)
-->
   (<s> ^relation <r>)
}
sp {create-condition*elaborate*action*condition-name
   (state <s> ^name create-condition
   		  	  ^action <co>)
   (<co> ^<< handle name >> <cname>)
-->
   (<s> ^condition-name <cname>)
}
sp {create-condition*elaborate*clause*equal-to
   (state <s> ^name create-condition
   		  	  ^clause <co>)
   (<co> ^equal-to <eq>)# -^modifier.handle negation)
   (<eq> -^modifier.handle negation)
-->
   (<s> ^equal-to <eq>)
}
sp {create-condition*elaborate*clause*not-equal-to
   (state <s> ^name create-condition
                   ^clause <co>)
   (<co> ^equal-to <eq>)
   (<eq> ^modifier.handle negation)
-{(state <s>)
  (<eq> -^formatted)}
-->
   (<s> ^not-equal-to <eq>)
}

#sp {create-condition*elaborate*clause*not-equal-to*2
#   (state <s> ^name create-condition
#                   ^clause <co>)
#   (<co> ^equal-to <eq> ^modifier.handle negation)
#-->
#   (<s> ^not-equal-to <eq>)
#}

sp {create-condition*elaborate*clause*modifier*negative
   (state <s> ^name create-condition
   		  	  ^clause <co>)
   (<co> ^modifier.handle negation)
-->
   (<s> ^negative true)
}
sp {create-condition*elaborate*parameter*modifier*negative
   (state <s> ^name create-condition
   		  	  ^param true
   		  	  ^relation <r>)
   (<r> ^predicates.handle negation)
-->
   (<s> ^negative true)
}
sp {create-condition*elaborate*clause*relation
   (state <s> ^name create-condition
   		  	  -^unary-attribute
   		  	  ^clause <co>)
   (<co> ^relation <r>)
-->
   (<s> ^relation <r>)
}
sp {create-condition*elaborate*num-args*3
   (state <s> ^name create-condition
   		  	  ^clause <co>)
   (<co> ^3 <r> -^4)
-->
   (<s> ^num-args 3)
}
sp {create-condition*elaborate*num-args*2
   (state <s> ^name create-condition
   		  	 -^equal-to.handle absent
   		  	  ^clause <co>)
   (<co> ^2 <r> -^3)
-->
   (<s> ^num-args 2)
}
sp {create-condition*elaborate*predicate*num-args*3
   (state <s> ^name create-condition
   		  	  ^clause.predicate <co>)
   (<co> ^3 <r> -^4)
-->
   (<s> ^num-args 3)
}
sp {create-condition*elaborate*predicate*num-args*2
   (state <s> ^name create-condition
   		  	  ^clause.predicate <co>)
   (<co> ^2 <r> -^3)
  -{(<co> ^handle in1)
    (<s> -^superstate.superstate.world.predicates.predicate.handle in1)} 
-->
   (<s> ^num-args 2)
}

sp {create-condition*elaborate*relation*num-args*3
   (state <s> ^name create-condition
   		  	  ^relation <co>)
   (<co> ^3 <r> -^4)
-->
   (<s> ^num-args 3)
}
sp {create-condition*elaborate*relation*num-args*2
   (state <s> ^name create-condition
   		  	 -^equal-to.handle absent
   		  	  ^relation <co>)
   (<co> ^2 <r> -^3)
  -{(<co> ^handle in1)
    (<s> -^superstate.superstate.world.predicates.predicate.handle in1)} 
-->
   (<s> ^num-args 2)
}
sp {create-condition*elaborate*relation*num-args*1*set
   (state <s> ^name create-condition
             -^superstate.superstate.world.predicates.predicate.handle in1
   		  	 -^equal-to.handle absent
   		  	  ^relation <co>)
   (<co> ^2 <r> -^3 ^handle in1)
-->
   (<s> ^num-args 1)
}

sp {create-condition*elaborate*predicate*num-args*1*set*in
   (state <s> ^name create-condition
             -^superstate.superstate.world.predicates.predicate.handle in1
   		  	 ^clause.predicate <co>)
   (<co> ^2 <r> -^3 ^handle in1)
-->
   (<s> ^num-args 1)
}

sp {create-condition*elaborate*relation*num-args*1*absent
   (state <s> ^name create-condition
   		  	  ^condition-type has-attribute
   		  	  ^equal-to.handle absent
   		  	  ^relation <co>)
   (<co> ^2 <r> -^3)
-->
   (<s> ^num-args 1)
}
sp {create-condition*elaborate*num-params
   (state <s> ^name create-condition
   		  	  ^num-args <na>)
-->
   (<s> ^num-params <na>)
}
sp {create-condition*elaborate*param1*rtype
   (state <s> ^name create-condition
              ^param true
              ^parameter.{1} <p1>
   		  	  ^clause <co>)
   (<co> ^rtype <type>)
-->
   (<p1> ^type <type>)
}
sp {create-condition*elaborate*param1*no-rtype
   (state <s> ^name create-condition
              ^args.{1}.rtype <type>
              ^parameter.{1} <p1>)
  -{(<s> ^param true
         ^clause <co>)
    (<co> ^rtype <rt>)}
  -{(<s> ^agent <ax>)
    (<ax> ^rtype <rx>)}
 -{(<s> ^clause <cc>)
   (<cc> ^arg1 <az>)
   (<az> ^rtype <rz> ^formatted <f>)
   (<f> -^parameter.{1} ^attribute input-arg)}
-->
   (<p1> ^type <type>)
}

sp {create-condition*elaborate*param1*no-rtype*no-arg*x
   (state <s> ^name create-condition
              ^rtype <type>
			  ^operator <o>
              ^parameter.{1} <p1>)
   (<p1> ^param-id <pid> -^type)
   (<o> ^name <nn>)
-->
   (<p1> ^type <type>)
}
sp {create-condition*elaborate*param2*rtype
   (state <s> ^name create-condition
              ^param true
              ^parameter.{2} <p1>
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^rtype <type>)
-->
   (<p1> ^type <type>)
}
sp {create-condition*elaborate*param2*no-rtype
   (state <s> ^name create-condition
              ^args.{2}.rtype <type>
              ^parameter.{2} <p1>)
  -{(<s> ^param true
         ^relation <rr>)
    (<rr> ^2 <co>)
    (<co> ^rtype <rt>)}
-->
   (<p1> ^type <type>)
}
sp {create-condition*elaborate*param3*no-rtype
   (state <s> ^name create-condition
              ^args.{3}.rtype <type>
              ^parameter.{3} <p1>)
  -{(<s> ^param true
         ^relation <rr>)
    (<rr> ^3 <co>)
    (<co> ^rtype <rt>)}
-->
   (<p1> ^type <type>)
}
##qqqqqx
sp {create-condition*elaborate*param1
   (state <s> ^name create-condition
              ^param true
   		  	  ^clause <co>)
   (<co> ^parameter-index <pi>)
-{(<s> ^unary-attribute)
  (<co> ^relation <r>)
  (<r> -^handle between)}#delay param-id
-{(<s> ^condition-name <cn> ^unary-attribute)
  (<co> ^predicates <pp>)
  (<pp> ^multiple true ^{<att> <> category <> quantified <> property-modifier <> dialog-object <> value <> handle <> type <> is-visible1 <> visible <> visibility <> multiple <> number} <val> > <cn>)}
-->
   (<s> ^param1 <pi>)
}
sp {create-condition*elaborate*param2
   (state <s> ^name create-condition
			 -^equal-to.handle absent
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^parameter-index <pi>)
-->
   (<s> ^param2 <pi>)
}
sp {create-condition*elaborate*param2*no-parameter-index
   (state <s> ^name create-condition
			 -^equal-to.handle absent
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^formatted <f>)#-^parameter-index 
   (<f> ^parameter.{1}.param-id <pi>)
 #-{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^param2 <pi>)
}
sp {create-condition*elaborate*param1*absent
   (state <s> ^name create-condition
   		  	  ^condition-type has-attribute
              ^equal-to.handle absent
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^parameter-index <pi>)
-->
   (<s> ^param1 <pi>)
}
sp {create-condition*elaborate*param3
   (state <s> ^name create-condition
               ^relation <r>)
   (<r> ^3 <co>)
   (<co> ^parameter-index <pi>)
-->
   (<s> ^param3 <pi>)
}
sp {create-condition*elaborate*parameter*2
   (state <s> ^name create-condition
              ^num-params 2
   		  	  ^param1 <a1>
          	  ^param2 <a2>)
-->
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2>)
   (<p1> ^param-id <a1>)
   (<p2> ^param-id <a2>)
}
sp {create-condition*elaborate*parameter*1
   (state <s> ^name create-condition
   		  	  ^param1 <a1>
          	 -^param2)
-->
   (<s> ^parameter <a>)
   (<a> ^1 <p1>)
   (<p1> ^param-id <a1>)
}
sp {create-condition*elaborate*smem-result*multiple
   (state <s> ^name create-condition
              ^smem-result.multiple true)
-->
   (<s> ^multiple true)
}
sp {create-condition*elaborate*clause*multiple
   (state <s> ^name create-condition
              ^clause.multiple true)
-->
   (<s> ^multiple true)
}
sp {create-condition*elaborate*rtype*single*attribute-of
   (state <s> ^name create-condition
   		  	  ^return-type number
          	 -^multiple true)
-->
   (<s> ^rtype single)
}
sp {create-condition*elaborate*rtype*single*no-arg1
   (state <s> ^name create-condition
   		  	  ^args <aa>
			 -^return-type number
			 -^function.function subset-of
             -^multiple true)
   (<aa> -^1 ^2 <x>)
-->
   (<s> ^rtype single)
}
sp {create-condition*elaborate*rtype*set*no-arg1
   (state <s> ^name create-condition
   		  	  ^args <aa>
			 -^return-type number
              ^multiple true)
   (<aa> -^1 ^2 <x>)
-->
   (<s> ^rtype set)
}
sp {create-condition*elaborate*rtype*set*attribute-of
   (state <s> ^name create-condition
   		  	  ^return-type number
              ^multiple true)
-->
   (<s> ^rtype set)
}
sp {create-condition*elaborate*parameter*2*attribute-of
   (state <s> ^name create-condition
              ^num-params 2
             -^equal-to.formatted
              ^args <aa>
              ^clause <c2>
             -^output-object-1 <c2>
   		  	  ^object-count <a1>
          	  ^param2 <a2>)
   (<aa> -^1 ^2 <x>)
-->
   (<s> ^increment-obj-count true)
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2>)
   (<p1> ^param-id <a1> )
   (<p2> ^param-id <a2>)
}
sp {create-condition*elaborate*parameter*2*attribute-of*output-object-1
   (state <s> ^name create-condition
              ^num-params 2
             -^equal-to.formatted
              ^args <aa>
              ^clause <c2>
              ^output-object-1 <c2>
          	  ^param2 <a2>)
   (<aa> -^1 ^2 <x>)
-->
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2>)
   (<p1> ^param-id 1)
   (<p2> ^param-id <a2>)
}
sp {create-condition*elaborate*parameter*3
   (state <s> ^name create-condition
              ^num-params 3
   		  	  ^param1 <a1>
          	  ^param2 <a2>
              ^param3 <a3>)
-->
   (<s> ^parameter <a>)
   (<a> ^1 <p1> ^2 <p2> ^3 <p3>)
   (<p1> ^param-id <a1>)
   (<p2> ^param-id <a2>)
   (<p3> ^param-id <a3>)
}
sp {create-condition*elaborate*rtype*parameter
   (state <s> ^name create-condition
   		  	 -^rtype
			 ^operator <o>
              ^parameter.{1}.type <type>)
   (<o> ^name <nn>)
-->
   (<s> ^rtype <type>)
}
sp {create-condition*elaborate*rtype*number
   (state <s> ^name create-condition
   		  	  ^equal-to.formatted.rtype single
              ^condition.name number)
-->
   (<s> ^rtype single)
}

sp {create-condition*elaborate*rtype*set
   (state <s> ^name create-condition
              ^clause.predicates.multiple true
			  ^clause <co>
              -^parameter.{1} <r>)
-{(<s> ^unary-attribute)
  (<co> ^relation <r>)
  (<r> -^handle between)}#delay param-id
-{(<s> ^condition-name <cn> ^unary-attribute)
  (<co> ^predicates <pp>)
  (<pp> ^multiple true ^{<att> <> category <> quantified <> property-modifier <> dialog-object <> value <> handle <> type <> is-visible1 <> visible <> visibility <> multiple <> number} <val> > <cn>)}
-->
   (<s> ^rtype set)
}

sp {create-condition*elaborate*rtype*single*parent*is*set
   (state <s> ^name create-condition
              ^clause.predicates.multiple true
			  ^clause <co>
			  ^unary-attribute
              -^parameter.{1} <r>)
  (<co> ^relation <r>)
  (<r> -^handle between)
-->
   (<s> ^rtype single)
}

sp {create-condition*elaborate*rtype*single*parent*is*set*multipleunary
   (state <s> ^name create-condition
			  ^clause <co>
			  ^condition-name <cn>
			  ^unary-attribute)
  (<co> ^predicates <pp>)
  (<pp> ^multiple true ^{<att> <> category <> quantified <> property-modifier <> dialog-object <> value <> handle <> type <> is-visible1 <> visible <> visibility <> multiple <> number} <val> > <cn>)
-->
   (<s> ^rtype single)
}

#qqqq
sp {create-condition*elaborate*rtype*no-parameter
   (state <s> ^name create-condition
              ^args.{1}.rtype <type>
              -^clause.predicates.multiple true
              -^parameter.{1} <r>)
-->
   (<s> ^rtype <type>)
}
sp {create-condition*elaborate*param1*action
   (state <s> ^name create-condition
   		  	  ^clause.<< 1 arg1 >> <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param1 <pa>)
}
sp {create-condition*elaborate*param1*action*subclause
   (state <s> ^name create-condition
   		  	  ^action <a>
   		  	  ^clause.subclause1 <sc>)
   (<sc> ^<< 1 arg1 >> <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param1 <pa>)
}
sp {create-condition*elaborate*param2*action*subclause
   (state <s> ^name create-condition
              ^action <a>
			  ^clause.subclause1 <sc>)
   (<sc> ^arg2.{2} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param2 <pa>)
}
sp {create-condition*elaborate*param2*action
   (state <s> ^name create-condition
              ^action <a>
   		  	  ^clause.arg2.{2} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param2 <pa>)
}
sp {create-condition*elaborate*param2*predicate
   (state <s> ^name create-condition
   		  	  ^clause.predicate.{2} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param2 <pa>)
}

sp {create-condition*elaborate*param2*2
   (state <s> ^name create-condition
   		  	  ^clause.{2} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param2 <pa>)
}
sp {create-condition*elaborate*param3*predicate
   (state <s> ^name create-condition
   		  	  ^clause.predicate.{3} <co>)
   (<co> ^parameter-index <pa>)
-->
   (<s> ^param3 <pa>)
}
sp {create-condition*elaborate*action*verb-prep
   (state <s> ^name create-condition
              ^action <a>
   		  	  ^clause.arg2.handle <vp>)
-->
   (<s> ^verb-prep <vp>)
}
sp {create-condition*elaborate*arg1*formatted*equal-to*state-pair
   (state <s> ^name create-condition
              -^param true
              ^condition-type state-pair
              ^equal-to <co>
   		  	  ^clause <c>)
   (<c> -^1 -^arg1)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})} #most recently added formatted 
-->
   (<s> ^arg1 <f>)
}
sp {create-condition*elaborate*param1*formatted*equal-to
   (state <s> ^name create-condition
              -^param true 
              ^equal-to <co>)
   (<co> ^parameter-index <id>)
-->
   (<s> ^param1 <id>)
}
sp {create-condition*elaborate*rtype*formatted*equal-to*attribute-of
   (state <s> ^name create-condition
              ^condition-type attribute-of
              ^equal-to <co>)
   (<co> ^formatted <f>)
   (<f> ^rtype <rtype>)
 -{(<co> ^formatted {<f2> > <f>})} 
-->
   (<s> ^rtype <rtype>)
}
sp {create-condition*elaborate*arg1*formatted*parameter
   (state <s> ^name create-condition
              ^param true
   		  	  ^clause <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg1 <f>)
}
sp {create-condition*elaborate*arg1*formatted*predicate
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.<< 1 arg1 >> <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg1 <f>)
}
sp {create-condition*elaborate*arg2*formatted*predicate*2
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.<< 2 arg2 >> <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg2 <f>)
}

sp {create-condition*elaborate*arg2*formatted*predicate
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.predicate.{2} <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg2 <f>)
}
sp {create-condition*elaborate*arg3*formatted*predicate
   (state <s> ^name create-condition
             -^action
              -^param true
   		  	  ^clause.predicate.{3} <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg3 <f>)
}
sp {create-condition*elaborate*arg2*formatted*parameter
   (state <s> ^name create-condition
			 -^equal-to.handle absent
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg2 <f>)
}
sp {create-condition*elaborate*arg3*formatted*parameter
   (state <s> ^name create-condition
			 -^equal-to.handle absent
   		  	  ^relation <r>)
   (<r> ^3 <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg3 <f>)
}

sp {create-condition*elaborate*arg1*formatted*parameter*absent
   (state <s> ^name create-condition
			  ^condition-type has-attribute
			  ^equal-to.handle absent
   		  	  ^relation <r>)
   (<r> ^2 <co>)
   (<co> ^formatted <f>)
  -{(<co> ^formatted {<f2> > <f>})}
-->
   (<s> ^arg1 <f>)
}
sp {create-condition*elaborate*args*2
   (state <s> ^name create-condition
              ^num-args 2
   		  	  ^arg1 <a1>
          	  ^arg2 <a2>)
-->
   (<s> ^args <a>)
   (<a> ^1 <a1> ^2 <a2>)
}
sp {create-condition*elaborate*args*1
   (state <s> ^name create-condition
              ^num-args 1
   		  	  ^arg1 <a1>)
-->
   (<s> ^args <a>)
   (<a> ^1 <a1>)
}
sp {create-condition*elaborate*args*1*default
   (state <s> ^name create-condition
              -^num-args
   		  	  ^arg1 <a1>
          	  -^arg2 )
-->
   (<s> ^args <a>)
   (<a> ^1 <a1>)
}
sp {create-condition*elaborate*args*1*function
   (state <s> ^name create-condition
              ^num-args 2
             -^param true
   		  	  -^arg1
          	  ^arg2 <a2>)
-->
   (<s> ^args <a>)
   (<a> ^2 <a2>)
}
sp {create-condition*elaborate*args*3
   (state <s> ^name create-condition
              ^num-args 3
   		  	  ^arg1 <a1>
          	  ^arg2 <a2>
              ^arg3 <a3>)
-->
   (<s> ^args <a>)
   (<a> ^1 <a1> ^2 <a2> ^3 <a3>)
}
sp {create-condition*elaborate*clause*parameter
   (state <s> ^name create-condition
   		  	  ^superstate.parameter <co>
   		  	  ^clause <co>)
	(<co> ^formatted)
-->
   (<s> ^param true)
}
#instead should see if smem has info (will do version that is state pair and possibly concept
#look at smem, might not be extracted yet...
sp {create-condition*elaborate*state-pair
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.predicates.predicate.handle <name>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type state-pair ^condition-attribute prepositions)
}
sp {create-condition*elaborate*not*state-pair
   (state <s> ^name create-condition
   		  	 -^superstate.superstate.world.predicates.predicate.handle <name>
   		  	  ^condition-name <name>)
-->
   (<s> ^not state-pair)
}
sp {create-condition*elaborate*not*attribute
   (state <s> ^name create-condition
   		  	 -^superstate.superstate.world.objects.object.predicates.<name>
             -^superstate.superstate.world.objects.object.predicates.<x> <name>
   		  	  ^condition-name <name>)
-->
   (<s> ^not attribute)
}
sp {create-condition*elaborate*type*concept
   (state <s> ^name create-condition
             -^action
   		  	  ^not attribute
          	  ^not state-pair
             -^condition-type attribute-of
			 -^function
             -^smem-result.function
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type concept)
}
sp {create-condition*elaborate*function
   (state <s> ^name create-condition
              ^smem-result.function <f>)
-->
   (<s> ^function <f>)
}
sp {create-condition*elaborate*type*function
   (state <s> ^name create-condition
              ^function <f>)
-->
   (<s> ^condition-type function)
}
sp {create-condition*elaborate*attribute*concept
   (state <s> ^name create-condition
             -^action
   		  	  ^condition-type concept
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-attribute predicate)
}
sp {create-condition*elaborate*attribute*concept*action
   (state <s> ^name create-condition
              ^action <a>
   		  	  ^condition-type concept
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-attribute action)
}
sp {create-condition*elaborate*attribute*property
   (state <s> ^name create-condition
   		  	  ^smem-result <ss>
              ^smem-result.property <prop>
			  ^condition-type attribute)
   (<prop> ^handle <att> ^item-type property -^handle number)
-->
   (<s> ^condition-attribute <att>)
}
sp {create-condition*elaborate*primitive*type*attribute
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.<name>
             -^clause.handle << of of1 >>
             -^relation.handle << of of1 >>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type attribute)
}
sp {create-condition*elaborate*primitive*type*attribute*2
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.{<x> <> number} <name>
             -^clause.handle << of of1 >>
             -^relation.handle << of of1 >>
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type attribute)
}
sp {create-condition*elaborate*type*attribute-of
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.<name>
          	  ^<< clause relation >>.handle << of of1 >>
			 -^equal-to.handle absent
   		  	  ^condition-name <name>)
-->
   (<s> ^condition-type attribute-of)
}
sp {create-condition*elaborate*type*has-attribute
   (state <s> ^name create-condition
   		  	  ^superstate.superstate.world.objects.object.predicates.<name>
          	  ^<< clause relation >>.handle << of of1 >>
			  ^equal-to <eq>
			  ^condition <co> 
   		  	  ^condition-name <name>)
   (<eq> ^handle absent)
-->
  (<s> ^condition-type has-attribute ^negative true)
  (<eq> ^formatted <co>)
}

sp {create-condition*elaborate*primitive*attribute*category
   (state <s> ^name create-condition
   		  	  ^smem-result.property <p>
   		  	  ^type attribute)
-->
   (<s> ^condition-attribute <p>)
}
sp {create-condition*elaborate*condition
   (state <s> ^name create-condition)
-->
   (<s> ^condition <c>)
}


#qqqq
#############################
###   DEBUGGING RULES   #####
#############################
sp {create-condition*interrupt
   (state <s> ^nameX create-conditionX
   		  	  ^condition <c>
			  #^parameter <p>
			  ^clause <l>
			  #^unary-attribute <ua>
			  #^function <f>
			  ^condition-name clear
			  #^condition.type same-attribute
			  ^operator <o>)
   (<o> ^name complete)
#(<c> ^rtype <rtype>)
#(<p> ^1 <p1>)
(<l> ^predicates <pm>)
(<pm> ^category block ^multiple true)
-->
(write (cmd print <c> -d 6))
#(write (cmd pref <p1> -w))
#(write (cmd pref <p> 1 -w))
(write (cmd pref <s> rtype -w))
(write (cmd print <s>))
#(write (cmd matches create-condition*apply*create-name))
(interrupt)
}

sp {wait*interrupt*create-condition
   (state <s> #^superstate.name learn-condition
   		  	  ^superstate.superstate.name retrieve-all-versionsX
   		  	  #^superstate.superstate.superstate.superstate.predicate.nlp-set <ss>
   		  	  #^superstate.superstate.superstate.goal.nlp-set <g>
			  ^superstate <ss>
			  #^condition <c>
			  #^function <f>
			  #^condition-name larger-than1
			  ^operator <o>)
   (<o> ^name wait)
-->
(write (cmd print <ss> -d 3))
(write (cmd matches))
#(write (cmd pref <ss> condition-name -w))
(interrupt)
}
##WORKING tILL HERE
##need to pick version!! that is best
#one works
sp {create-type*interrupt
   (state <s> #^superstate.superstate.name retrieve-predicate-structure
   		  	  ^superstate.name create-args
			  #^superstate.name create-action
			  #^superstate.name complete
			  #^superstate.name learn-condition
			  ^top-state.dialog-context <dc>
			  ^superstate.superstate.clause <cz>
              ^superstate.superstate <ss>
   		  	  ^superstate.superstate.superstate.operator <oo> +)
   		  	  #^superstate.superstate.superstate.nlp <ss>)
-->
(write (cmd print <oo> -d 3))
(write (cmd print <cz> -d 3))
(interrupt)
#(write (cmd matches create-from-parse*apply*complete*superstate*copy))
#(write (cmd fc satisfy-predicate-conditions*elaborate-finished-learning*final-version))
}


sp {create-type*interrupt*wait
   (state <s> ^operator.name wait
			  #^top-state.dialog-context <dc>
             ^superstate <ss>)
   		  	  #^superstate.superstate.superstate.operator <oo> +)
   		  	  #^superstate.superstate.superstate.nlp <ss>)
			  (<ss> ^name learn-condition ^superstate <ls>)
-->
(interrupt)
#(write (cmd print <ls> -d 5))
(write (cmd pref <ls>))
#(write (cmd matches create-from-parse*apply*complete*superstate*copy))
#(write (cmd fc satisfy-predicate-conditions*elaborate-finished-learning*final-version))
}